{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _jsxFileName = \"/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Animated = require('react-native').Animated;\n\nvar NavigationContainer = require('./NavigationContainer');\n\nvar React = require('react');\n\nvar StyleSheet = require('react-native').StyleSheet;\n\nvar View = require('react-native').View;\n\nvar NavigationScenesReducer = require('./NavigationScenesReducer');\n\nvar PropTypes = require('prop-types');\n\nvar NavigationView = function (_React$PureComponent) {\n  _inherits(NavigationView, _React$PureComponent);\n\n  var _super = _createSuper(NavigationView);\n\n  function NavigationView(props, context) {\n    var _this;\n\n    _classCallCheck(this, NavigationView);\n\n    _this = _super.call(this, props, context);\n    var layout = {\n      initWidth: 0,\n      initHeight: 0,\n      isMeasured: false,\n      width: new Animated.Value(0),\n      height: new Animated.Value(0)\n    };\n    var navigationState = _this.props.navigationState;\n    _this._position = new Animated.Value(navigationState.index);\n    _this.state = {\n      layout: layout,\n      scenes: NavigationScenesReducer([], navigationState)\n    };\n    return _this;\n  }\n\n  _createClass(NavigationView, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      if (nextProps.navigationState !== this.props.navigationState) {\n        var navigationState = nextProps.navigationState;\n        this.setState({\n          scenes: NavigationScenesReducer(this.state.scenes, navigationState, null)\n        }, function () {\n          _this2._position.setValue(navigationState.index);\n        });\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._onLayout = this._onLayout.bind(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          navigationState = _this$props.navigationState,\n          onNavigate = _this$props.onNavigate;\n      var _this$state = this.state,\n          layout = _this$state.layout,\n          scenes = _this$state.scenes;\n      var sceneProps = {\n        layout: layout,\n        navigationState: navigationState,\n        onNavigate: onNavigate,\n        position: this._position,\n        scene: scenes[navigationState.index],\n        scenes: scenes\n      };\n      return React.createElement(View, {\n        onLayout: this._onLayout,\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }, this._renderScene(sceneProps));\n    }\n  }, {\n    key: \"_renderScene\",\n    value: function _renderScene(props) {\n      var child = this.props.renderScene(props);\n\n      if (child === null) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        key: props.scene.key,\n        style: styles.scene,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 12\n        }\n      }, child);\n    }\n  }, {\n    key: \"_onLayout\",\n    value: function _onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          height = _event$nativeEvent$la.height,\n          width = _event$nativeEvent$la.width;\n\n      var layout = _objectSpread({}, this.state.layout, {\n        initHeight: height,\n        initWidth: width,\n        isMeasured: true\n      });\n\n      layout.height.setValue(height);\n      layout.width.setValue(width);\n      this.setState({\n        layout: layout\n      });\n    }\n  }]);\n\n  return NavigationView;\n}(React.PureComponent);\n\nNavigationView.propTypes = {\n  navigationState: PropTypes.object.isRequired,\n  onNavigate: PropTypes.func.isRequired,\n  renderScene: PropTypes.func.isRequired\n};\nvar styles = StyleSheet.create({\n  scene: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n});\nmodule.exports = NavigationContainer.create(NavigationView);","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationView.js"],"names":["Animated","require","NavigationContainer","React","StyleSheet","View","NavigationScenesReducer","PropTypes","NavigationView","props","context","layout","initWidth","initHeight","isMeasured","width","Value","height","navigationState","_position","index","state","scenes","nextProps","setState","setValue","_onLayout","bind","onNavigate","sceneProps","position","scene","style","_renderScene","child","renderScene","key","styles","event","nativeEvent","PureComponent","propTypes","object","isRequired","func","create","bottom","left","right","top","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationView\n * @flow\n */\n'use strict';\n\nconst Animated = require('react-native').Animated;\nconst NavigationContainer = require('./NavigationContainer');\nconst React = require('react');\nconst StyleSheet = require('react-native').StyleSheet;\nconst View = require('react-native').View;\nconst NavigationScenesReducer = require('./NavigationScenesReducer');\n\nimport type {\n  NavigationActionCaller,\n  NavigationAnimatedValue,\n  NavigationLayout,\n  NavigationParentState,\n  NavigationScene,\n  NavigationSceneRenderer,\n  NavigationSceneRendererProps,\n} from 'NavigationTypeDefinition';\n\ntype Props = {\n  navigationState: NavigationParentState,\n  onNavigate: NavigationActionCaller,\n  renderScene: NavigationSceneRenderer,\n  style: any,\n};\n\ntype State = {\n  layout: NavigationLayout,\n  scenes: Array<NavigationScene>,\n};\n\nconst PropTypes = require('prop-types');\n\n/**\n * A simple view that will render a scene for the currently focused sub-state.\n * The most common use-case is for tabs, where no transition is needed\n */\nclass NavigationView extends React.PureComponent<any, Props, any> {\n  _onLayout: (event: any) => void;\n  _position: NavigationAnimatedValue;\n\n  props: Props;\n  state: State;\n\n  static propTypes = {\n    navigationState: PropTypes.object.isRequired,\n    onNavigate: PropTypes.func.isRequired,\n    renderScene: PropTypes.func.isRequired,\n  };\n\n  constructor(props: Props, context: any) {\n    super(props, context);\n\n    const layout = {\n      initWidth: 0,\n      initHeight: 0,\n      isMeasured: false,\n      width: new Animated.Value(0),\n      height: new Animated.Value(0),\n    };\n\n    const {navigationState} = this.props;\n\n    this._position = new Animated.Value(navigationState.index);\n\n    this.state = {\n      layout,\n      scenes: NavigationScenesReducer([], navigationState),\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props): void {\n    if (nextProps.navigationState !== this.props.navigationState) {\n      const {navigationState} = nextProps;\n      this.setState(\n        {\n          scenes: NavigationScenesReducer(\n            this.state.scenes,\n            navigationState,\n            null, // There will be no transtion.\n          ),\n        },\n        () => {\n          this._position.setValue(navigationState.index);\n        },\n      );\n    }\n  }\n\n  componentWillMount(): void {\n    this._onLayout = this._onLayout.bind(this);\n  }\n\n  render(): ReactElement {\n    const {\n      navigationState,\n      onNavigate\n    } = this.props;\n\n    const {\n      layout,\n      scenes,\n    } = this.state;\n\n    const sceneProps = {\n      layout,\n      navigationState: navigationState,\n      onNavigate: onNavigate,\n      position: this._position,\n      scene: scenes[navigationState.index],\n      scenes,\n    };\n\n    return (\n      <View\n        onLayout={this._onLayout}\n        style={this.props.style}>\n        {this._renderScene(sceneProps)}\n      </View>\n    );\n  }\n\n  _renderScene(props: NavigationSceneRendererProps): ?ReactElement {\n\n    const child = this.props.renderScene(props);\n    if (child === null) {\n      return null;\n    }\n    return <View key={props.scene.key} style={styles.scene}>{child}</View>;\n  }\n\n  _onLayout(event: any): void {\n    const {height, width} = event.nativeEvent.layout;\n\n    const layout = {\n      ...this.state.layout,\n      initHeight: height,\n      initWidth: width,\n      isMeasured: true,\n    };\n\n    layout.height.setValue(height);\n    layout.width.setValue(width);\n\n    this.setState({ layout });\n  }\n}\n\nconst styles = StyleSheet.create({\n  scene: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n});\n\nmodule.exports = NavigationContainer.create(NavigationView);\n"]},"metadata":{},"sourceType":"script"}