{"ast":null,"code":"'use strict';\n\nvar Animated = require('react-native').Animated;\n\nvar React = require('react');\n\nvar PropTypes = React.PropTypes;\nvar action = PropTypes.shape({\n  type: PropTypes.string.isRequired\n});\nvar animatedValue = PropTypes.instanceOf(Animated.Value);\nvar navigationState = PropTypes.shape({\n  key: PropTypes.string.isRequired\n});\nvar navigationParentState = PropTypes.shape({\n  index: PropTypes.number.isRequired,\n  key: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(navigationState)\n});\nvar layout = PropTypes.shape({\n  height: animatedValue,\n  initHeight: PropTypes.number.isRequired,\n  initWidth: PropTypes.number.isRequired,\n  isMeasured: PropTypes.bool.isRequired,\n  width: animatedValue\n});\nvar scene = PropTypes.shape({\n  index: PropTypes.number.isRequired,\n  isStale: PropTypes.bool.isRequired,\n  key: PropTypes.string.isRequired,\n  navigationState: navigationState\n});\nvar SceneRendererProps = {\n  layout: layout.isRequired,\n  navigationState: navigationParentState.isRequired,\n  onNavigate: PropTypes.func.isRequired,\n  position: animatedValue.isRequired,\n  scene: scene.isRequired,\n  scenes: PropTypes.arrayOf(scene).isRequired\n};\nvar SceneRenderer = PropTypes.shape(SceneRendererProps);\nvar panHandlers = PropTypes.shape({\n  onMoveShouldSetResponder: PropTypes.func.isRequired,\n  onMoveShouldSetResponderCapture: PropTypes.func.isRequired,\n  onResponderEnd: PropTypes.func.isRequired,\n  onResponderGrant: PropTypes.func.isRequired,\n  onResponderMove: PropTypes.func.isRequired,\n  onResponderReject: PropTypes.func.isRequired,\n  onResponderRelease: PropTypes.func.isRequired,\n  onResponderStart: PropTypes.func.isRequired,\n  onResponderTerminate: PropTypes.func.isRequired,\n  onResponderTerminationRequest: PropTypes.func.isRequired,\n  onStartShouldSetResponder: PropTypes.func.isRequired,\n  onStartShouldSetResponderCapture: PropTypes.func.isRequired\n});\n\nfunction extractSceneRendererProps(props) {\n  return {\n    layout: props.layout,\n    navigationState: props.navigationState,\n    onNavigate: props.onNavigate,\n    position: props.position,\n    scene: props.scene,\n    scenes: props.scenes\n  };\n}\n\nmodule.exports = {\n  extractSceneRendererProps: extractSceneRendererProps,\n  SceneRendererProps: SceneRendererProps,\n  action: action,\n  navigationParentState: navigationParentState,\n  navigationState: navigationState,\n  panHandlers: panHandlers,\n  SceneRenderer: SceneRenderer\n};","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationPropTypes.js"],"names":["Animated","require","React","PropTypes","action","shape","type","string","isRequired","animatedValue","instanceOf","Value","navigationState","key","navigationParentState","index","number","children","arrayOf","layout","height","initHeight","initWidth","isMeasured","bool","width","scene","isStale","SceneRendererProps","onNavigate","func","position","scenes","SceneRenderer","panHandlers","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","onStartShouldSetResponderCapture","extractSceneRendererProps","props","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationPropTypes\n * @flow\n */\n'use strict';\n\nimport type  {\n  NavigationSceneRendererProps,\n} from 'NavigationTypeDefinition';\n\n/**\n * React component PropTypes Definitions. Consider using this as a supplementary\n * measure with `NavigationTypeDefinition`. This helps to capture the propType\n * error at run-time, where as `NavigationTypeDefinition` capture the flow\n * type check errors at build time.\n */\n\nconst Animated = require('react-native').Animated;\nconst React = require('react');\n\nconst {PropTypes} = React;\n\n/* NavigationAction */\nconst action =  PropTypes.shape({\n  type: PropTypes.string.isRequired,\n});\n\n/* NavigationAnimatedValue  */\nconst animatedValue = PropTypes.instanceOf(Animated.Value);\n\n/* NavigationState  */\nconst navigationState = PropTypes.shape({\n  key: PropTypes.string.isRequired,\n});\n\n/* NavigationParentState  */\nconst navigationParentState = PropTypes.shape({\n  index: PropTypes.number.isRequired,\n  key: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(navigationState),\n});\n\n/* NavigationLayout */\nconst layout = PropTypes.shape({\n  height: animatedValue,\n  initHeight: PropTypes.number.isRequired,\n  initWidth: PropTypes.number.isRequired,\n  isMeasured: PropTypes.bool.isRequired,\n  width: animatedValue,\n});\n\n/* NavigationScene */\nconst scene = PropTypes.shape({\n  index: PropTypes.number.isRequired,\n  isStale: PropTypes.bool.isRequired,\n  key: PropTypes.string.isRequired,\n  navigationState,\n});\n\n/* NavigationSceneRendererProps */\nconst SceneRendererProps = {\n  layout: layout.isRequired,\n  navigationState: navigationParentState.isRequired,\n  onNavigate: PropTypes.func.isRequired,\n  position: animatedValue.isRequired,\n  scene: scene.isRequired,\n  scenes: PropTypes.arrayOf(scene).isRequired,\n};\n\nconst SceneRenderer = PropTypes.shape(SceneRendererProps);\n\n/* NavigationPanPanHandlers */\nconst panHandlers = PropTypes.shape({\n  onMoveShouldSetResponder: PropTypes.func.isRequired,\n  onMoveShouldSetResponderCapture: PropTypes.func.isRequired,\n  onResponderEnd: PropTypes.func.isRequired,\n  onResponderGrant: PropTypes.func.isRequired,\n  onResponderMove: PropTypes.func.isRequired,\n  onResponderReject: PropTypes.func.isRequired,\n  onResponderRelease: PropTypes.func.isRequired,\n  onResponderStart: PropTypes.func.isRequired,\n  onResponderTerminate: PropTypes.func.isRequired,\n  onResponderTerminationRequest: PropTypes.func.isRequired,\n  onStartShouldSetResponder: PropTypes.func.isRequired,\n  onStartShouldSetResponderCapture: PropTypes.func.isRequired,\n});\n\n/**\n * Helper function that extracts the props needed for scene renderer.\n */\nfunction extractSceneRendererProps(\n  props: NavigationSceneRendererProps,\n): NavigationSceneRendererProps {\n  return {\n    layout: props.layout,\n    navigationState: props.navigationState,\n    onNavigate: props.onNavigate,\n    position: props.position,\n    scene: props.scene,\n    scenes: props.scenes,\n  };\n}\n\nmodule.exports = {\n  // helpers\n  extractSceneRendererProps,\n\n  // Bundled propTypes.\n  SceneRendererProps,\n\n  // propTypes\n  action,\n  navigationParentState,\n  navigationState,\n  panHandlers,\n  SceneRenderer,\n};\n"]},"metadata":{},"sourceType":"script"}