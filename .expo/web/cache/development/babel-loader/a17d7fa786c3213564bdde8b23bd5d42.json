{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Switch;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _TabBar = _interopRequireDefault(require(\"./TabBar\"));\n\nvar _Actions = _interopRequireDefault(require(\"./Actions\"));\n\nvar _jsxFileName = \"/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-router-flux/src/Switch.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Switch(props) {\n  var navState = props.navigationState;\n  var selector = props.selector;\n  var statem = props.statem;\n  if (!selector && !statem) console.error('Selector should be defined.');\n  var index = -1;\n  var selectedKey;\n\n  if (!selector) {\n    navState.children.forEach(function (el, i) {\n      if (!(el.default || el.state)) {\n        console.error(\"Either default or state should be defined for element=\" + el.key);\n      }\n\n      if (el.default) {\n        index = i;\n      } else if (el.state.active) {\n        index = i;\n      }\n    });\n  } else {\n    selectedKey = selector(props);\n    if (!selectedKey) console.error('Selector should return key.');\n    navState.children.forEach(function (el, i) {\n      if (el.sceneKey === selectedKey) {\n        index = i;\n      }\n    });\n  }\n\n  if (index === -1) console.error(\"A scene for key \\u201C\" + selectedKey + \"\\u201D does not exist.\");\n  selectedKey = navState.children[index].sceneKey;\n  var navigationState;\n\n  if (index !== navState.index) {\n    if (props.unmountScenes) {\n      navigationState = _objectSpread({}, navState, {\n        children: [navState.children[navState.index]],\n        index: 0\n      });\n      setTimeout(function () {\n        _Actions.default[selectedKey]({\n          unmountScenes: true\n        });\n      }, 1);\n    } else {\n      navigationState = _objectSpread({}, navState, {\n        index: index\n      });\n      setTimeout(function () {\n        _Actions.default[selectedKey]();\n      }, 1);\n    }\n  } else {\n    navigationState = navState;\n  }\n\n  return _react.default.createElement(_TabBar.default, {\n    onNavigate: props.onNavigate,\n    navigationState: navigationState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  });\n}\n\nSwitch.propTypes = {\n  navigationState: _react.PropTypes.object,\n  onNavigate: _react.PropTypes.func,\n  selector: _react.PropTypes.func,\n  statem: _react.PropTypes.any,\n  unmountScenes: _react.PropTypes.bool\n};","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-router-flux/src/Switch.js"],"names":["Switch","props","navState","navigationState","selector","statem","console","error","index","selectedKey","children","forEach","el","i","default","state","key","active","sceneKey","unmountScenes","setTimeout","Actions","onNavigate","propTypes","PropTypes","object","func","any","bool"],"mappings":"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","sourcesContent":["import React, { PropTypes } from 'react';\nimport TabBar from './TabBar';\nimport Actions from './Actions';\n\nexport default function Switch(props) {\n  const navState = props.navigationState;\n\n  const selector = props.selector;\n  const statem = props.statem;\n  if (!selector && !statem) console.error('Selector should be defined.');\n  let index = -1;\n  let selectedKey;\n  if (!selector) {\n    // support Statem - Harel statecharts machine!\n    navState.children.forEach((el, i) => {\n      if (!(el.default || el.state)) {\n        console.error(`Either default or state should be defined for element=${el.key}`);\n      }\n      if (el.default) {\n        index = i;\n      } else if (el.state.active) {\n        index = i;\n      }\n    });\n  } else {\n    selectedKey = selector(props);\n    if (!selectedKey) console.error('Selector should return key.');\n    navState.children.forEach((el, i) => {\n      if (el.sceneKey === selectedKey) {\n        index = i;\n      }\n    });\n  }\n  if (index === -1) console.error(`A scene for key “${selectedKey}” does not exist.`);\n  selectedKey = navState.children[index].sceneKey;\n\n  let navigationState;\n  if (index !== navState.index) {\n    if (props.unmountScenes) {\n      navigationState = {\n        ...navState,\n        children: [navState.children[navState.index]],\n        index: 0,\n      };\n      setTimeout(() => {\n        Actions[selectedKey]({ unmountScenes: true });\n      }, 1);\n    } else {\n      navigationState = { ...navState, index };\n      setTimeout(() => {\n        Actions[selectedKey]();\n      }, 1);\n    }\n  } else {\n    navigationState = navState;\n  }\n\n  return (\n    <TabBar\n      onNavigate={props.onNavigate}\n      navigationState={navigationState}\n    />\n  );\n}\n\nSwitch.propTypes = {\n  navigationState: PropTypes.object,\n  onNavigate: PropTypes.func,\n  selector: PropTypes.func,\n  statem: PropTypes.any,\n  unmountScenes: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"script"}