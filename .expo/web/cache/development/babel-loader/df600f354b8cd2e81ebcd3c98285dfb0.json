{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar PanResponder = require('react-native').PanResponder;\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar EmptyPanHandlers = {\n  onMoveShouldSetPanResponder: null,\n  onPanResponderGrant: null,\n  onPanResponderMove: null,\n  onPanResponderRelease: null,\n  onPanResponderTerminate: null\n};\n\nvar NavigationAbstractPanResponder = function NavigationAbstractPanResponder() {\n  var _this = this;\n\n  _classCallCheck(this, NavigationAbstractPanResponder);\n\n  var config = {};\n  Object.keys(EmptyPanHandlers).forEach(function (name) {\n    var fn = _this[name];\n    invariant(typeof fn === 'function', 'subclass of `NavigationAbstractPanResponder` must implement method %s', name);\n    config[name] = fn.bind(_this);\n  }, this);\n  this.panHandlers = PanResponder.create(config).panHandlers;\n};\n\nmodule.exports = NavigationAbstractPanResponder;","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationAbstractPanResponder.js"],"names":["PanResponder","require","invariant","EmptyPanHandlers","onMoveShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","NavigationAbstractPanResponder","config","Object","keys","forEach","name","fn","bind","panHandlers","create","module","exports"],"mappings":"AAWA;;;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBD,YAA7C;;AAEA,IAAME,SAAS,GAAGD,OAAO,CAAC,oBAAD,CAAzB;;AAMA,IAAME,gBAAgB,GAAG;AACvBC,EAAAA,2BAA2B,EAAE,IADN;AAEvBC,EAAAA,mBAAmB,EAAE,IAFE;AAGvBC,EAAAA,kBAAkB,EAAE,IAHG;AAIvBC,EAAAA,qBAAqB,EAAE,IAJA;AAKvBC,EAAAA,uBAAuB,EAAE;AALF,CAAzB;;IAYMC,8B,GAIJ,0CAAc;AAAA;;AAAA;;AACZ,MAAMC,MAAM,GAAG,EAAf;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYT,gBAAZ,EAA8BU,OAA9B,CAAsC,UAAAC,IAAI,EAAI;AAC5C,QAAMC,EAAO,GAAI,KAAD,CAAYD,IAAZ,CAAhB;AAEAZ,IAAAA,SAAS,CACP,OAAOa,EAAP,KAAc,UADP,EAEP,uEAFO,EAGPD,IAHO,CAAT;AAMAJ,IAAAA,MAAM,CAACI,IAAD,CAAN,GAAeC,EAAE,CAACC,IAAH,CAAQ,KAAR,CAAf;AACD,GAVD,EAUG,IAVH;AAYA,OAAKC,WAAL,GAAmBjB,YAAY,CAACkB,MAAb,CAAoBR,MAApB,EAA4BO,WAA/C;AACD,C;;AAGHE,MAAM,CAACC,OAAP,GAAiBX,8BAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationAbstractPanResponder\n * @flow\n */\n'use strict';\n\nconst PanResponder = require('react-native').PanResponder;\n\nconst invariant = require('fbjs/lib/invariant');\n\nimport type  {\n  NavigationPanPanHandlers,\n} from 'NavigationTypeDefinition';\n\nconst EmptyPanHandlers = {\n  onMoveShouldSetPanResponder: null,\n  onPanResponderGrant: null,\n  onPanResponderMove: null,\n  onPanResponderRelease: null,\n  onPanResponderTerminate: null,\n};\n\n/**\n * Abstract class that defines the common interface of PanResponder that handles\n * the gesture actions.\n */\nclass NavigationAbstractPanResponder {\n\n  panHandlers: NavigationPanPanHandlers;\n\n  constructor() {\n    const config = {};\n    Object.keys(EmptyPanHandlers).forEach(name => {\n      const fn: any = (this: any)[name];\n\n      invariant(\n        typeof fn === 'function',\n        'subclass of `NavigationAbstractPanResponder` must implement method %s',\n        name\n      );\n\n      config[name] = fn.bind(this);\n    }, this);\n\n    this.panHandlers = PanResponder.create(config).panHandlers;\n  }\n}\n\nmodule.exports = NavigationAbstractPanResponder;\n"]},"metadata":{},"sourceType":"script"}