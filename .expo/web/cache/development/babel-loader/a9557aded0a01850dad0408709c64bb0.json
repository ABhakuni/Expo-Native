{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar NavigationStateUtils = require('./NavigationStateUtils');\n\nvar defaultGetReducerForState = function defaultGetReducerForState(initialState) {\n  return function (state) {\n    return state || initialState;\n  };\n};\n\nfunction NavigationStackReducer(_ref) {\n  var initialState = _ref.initialState,\n      getReducerForState = _ref.getReducerForState,\n      getPushedReducerForAction = _ref.getPushedReducerForAction;\n  var getReducerForStateWithDefault = getReducerForState || defaultGetReducerForState;\n  return function (lastState, action) {\n    if (!lastState) {\n      return initialState;\n    }\n\n    var lastParentState = NavigationStateUtils.getParent(lastState);\n\n    if (!lastParentState) {\n      return lastState;\n    }\n\n    var activeSubState = lastParentState.children[lastParentState.index];\n    var activeSubReducer = getReducerForStateWithDefault(activeSubState);\n    var nextActiveState = activeSubReducer(activeSubState, action);\n\n    if (nextActiveState !== activeSubState) {\n      var nextChildren = _toConsumableArray(lastParentState.children);\n\n      nextChildren[lastParentState.index] = nextActiveState;\n      return _objectSpread({}, lastParentState, {\n        children: nextChildren\n      });\n    }\n\n    var subReducerToPush = getPushedReducerForAction(action, lastParentState);\n\n    if (subReducerToPush) {\n      return NavigationStateUtils.push(lastParentState, subReducerToPush(null, action));\n    }\n\n    switch (action.type) {\n      case 'back':\n      case 'BackAction':\n        if (lastParentState.index === 0 || lastParentState.children.length === 1) {\n          return lastParentState;\n        }\n\n        return NavigationStateUtils.pop(lastParentState);\n    }\n\n    return lastParentState;\n  };\n}\n\nmodule.exports = NavigationStackReducer;","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationStackReducer.js"],"names":["NavigationStateUtils","require","defaultGetReducerForState","initialState","state","NavigationStackReducer","getReducerForState","getPushedReducerForAction","getReducerForStateWithDefault","lastState","action","lastParentState","getParent","activeSubState","children","index","activeSubReducer","nextActiveState","nextChildren","subReducerToPush","push","type","length","pop","module","exports"],"mappings":"AAWA;;;;;;;;;;AAEA,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,wBAAD,CAAlC;;AAkDA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,YAAD;AAAA,SAAkB,UAACC,KAAD;AAAA,WAAWA,KAAK,IAAID,YAApB;AAAA,GAAlB;AAAA,CAAlC;;AAEA,SAASE,sBAAT,OAAsI;AAAA,MAArGF,YAAqG,QAArGA,YAAqG;AAAA,MAAvFG,kBAAuF,QAAvFA,kBAAuF;AAAA,MAAnEC,yBAAmE,QAAnEA,yBAAmE;AACpI,MAAMC,6BAA6B,GAAGF,kBAAkB,IAAIJ,yBAA5D;AACA,SAAO,UAAUO,SAAV,EAAuCC,MAAvC,EAAqE;AAC1E,QAAI,CAACD,SAAL,EAAgB;AACd,aAAON,YAAP;AACD;;AACD,QAAMQ,eAAe,GAAGX,oBAAoB,CAACY,SAArB,CAA+BH,SAA/B,CAAxB;;AACA,QAAI,CAACE,eAAL,EAAsB;AACpB,aAAOF,SAAP;AACD;;AAED,QAAMI,cAAc,GAAGF,eAAe,CAACG,QAAhB,CAAyBH,eAAe,CAACI,KAAzC,CAAvB;AACA,QAAMC,gBAAgB,GAAGR,6BAA6B,CAACK,cAAD,CAAtD;AACA,QAAMI,eAAe,GAAGD,gBAAgB,CAACH,cAAD,EAAiBH,MAAjB,CAAxC;;AACA,QAAIO,eAAe,KAAKJ,cAAxB,EAAwC;AACtC,UAAMK,YAAY,sBAAOP,eAAe,CAACG,QAAvB,CAAlB;;AACAI,MAAAA,YAAY,CAACP,eAAe,CAACI,KAAjB,CAAZ,GAAsCE,eAAtC;AACA,+BACKN,eADL;AAEEG,QAAAA,QAAQ,EAAEI;AAFZ;AAID;;AAED,QAAMC,gBAAgB,GAAGZ,yBAAyB,CAACG,MAAD,EAASC,eAAT,CAAlD;;AACA,QAAIQ,gBAAJ,EAAsB;AACpB,aAAOnB,oBAAoB,CAACoB,IAArB,CACLT,eADK,EAELQ,gBAAgB,CAAC,IAAD,EAAOT,MAAP,CAFX,CAAP;AAID;;AAED,YAAQA,MAAM,CAACW,IAAf;AACE,WAAK,MAAL;AACA,WAAK,YAAL;AACE,YAAIV,eAAe,CAACI,KAAhB,KAA0B,CAA1B,IAA+BJ,eAAe,CAACG,QAAhB,CAAyBQ,MAAzB,KAAoC,CAAvE,EAA0E;AACxE,iBAAOX,eAAP;AACD;;AACD,eAAOX,oBAAoB,CAACuB,GAArB,CAAyBZ,eAAzB,CAAP;AANJ;;AASA,WAAOA,eAAP;AACD,GAvCD;AAwCD;;AAEDa,MAAM,CAACC,OAAP,GAAiBpB,sBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationStackReducer\n * @flow\n */\n'use strict';\n\nvar NavigationStateUtils = require('./NavigationStateUtils');\n\nimport type {\n  NavigationState,\n  NavigationParentState,\n  NavigationReducer,\n} from 'NavigationTypeDefinition';\n\nimport type {\n  BackAction,\n} from 'NavigationRootContainer';\n\nexport type NavigationStackReducerAction = BackAction | {\n  type: string,\n};\n\nexport type ReducerForStateHandler = (state: NavigationState) => NavigationReducer;\n\nexport type PushedReducerForActionHandler = (action: any, lastState: NavigationParentState) => ?NavigationReducer;\n\nexport type StackReducerConfig = {\n  /*\n   * The initialState is that the reducer will use when there is no previous state.\n   * Must be a NavigationParentState:\n   *\n   * {\n   *   children: [\n   *     {key: 'subState0'},\n   *     {key: 'subState1'},\n   *   ],\n   *   index: 0,\n   *   key: 'navStackKey'\n   * }\n   */\n  initialState: NavigationParentState;\n\n  /*\n   * Returns the sub-reducer for a particular state to handle. This will be called\n   * when we need to handle an action on a sub-state. If no reducer is returned,\n   * no action will be taken\n   */\n  getReducerForState?: ReducerForStateHandler;\n\n  /*\n   * Returns a sub-reducer that will be used when pushing a new route. If a reducer\n   * is returned, it be called to get the new state that will be pushed\n   */\n  getPushedReducerForAction: PushedReducerForActionHandler;\n};\n\nconst defaultGetReducerForState = (initialState) => (state) => state || initialState;\n\nfunction NavigationStackReducer({initialState, getReducerForState, getPushedReducerForAction}: StackReducerConfig): NavigationReducer {\n  const getReducerForStateWithDefault = getReducerForState || defaultGetReducerForState;\n  return function (lastState: ?NavigationState, action: any): NavigationState {\n    if (!lastState) {\n      return initialState;\n    }\n    const lastParentState = NavigationStateUtils.getParent(lastState);\n    if (!lastParentState) {\n      return lastState;\n    }\n\n    const activeSubState = lastParentState.children[lastParentState.index];\n    const activeSubReducer = getReducerForStateWithDefault(activeSubState);\n    const nextActiveState = activeSubReducer(activeSubState, action);\n    if (nextActiveState !== activeSubState) {\n      const nextChildren = [...lastParentState.children];\n      nextChildren[lastParentState.index] = nextActiveState;\n      return {\n        ...lastParentState,\n        children: nextChildren,\n      };\n    }\n\n    const subReducerToPush = getPushedReducerForAction(action, lastParentState);\n    if (subReducerToPush) {\n      return NavigationStateUtils.push(\n        lastParentState,\n        subReducerToPush(null, action)\n      );\n    }\n\n    switch (action.type) {\n      case 'back':\n      case 'BackAction':\n        if (lastParentState.index === 0 || lastParentState.children.length === 1) {\n          return lastParentState;\n        }\n        return NavigationStateUtils.pop(lastParentState);\n    }\n\n    return lastParentState;\n  };\n}\n\nmodule.exports = NavigationStackReducer;\n"]},"metadata":{},"sourceType":"script"}