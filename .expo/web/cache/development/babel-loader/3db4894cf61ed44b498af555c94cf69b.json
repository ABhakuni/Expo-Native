{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _jsxFileName = \"/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationPointerEventsContainer.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar NavigationAnimatedValueSubscription = require('./NavigationAnimatedValueSubscription');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar MIN_POSITION_OFFSET = 0.01;\n\nfunction create(Component) {\n  var Container = function (_React$Component) {\n    _inherits(Container, _React$Component);\n\n    var _super = _createSuper(Container);\n\n    function Container(props, context) {\n      var _this;\n\n      _classCallCheck(this, Container);\n\n      _this = _super.call(this, props, context);\n      _this._pointerEvents = _this._computePointerEvents();\n      return _this;\n    }\n\n    _createClass(Container, [{\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        this._onPositionChange = this._onPositionChange.bind(this);\n        this._onComponentRef = this._onComponentRef.bind(this);\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._bindPosition(this.props);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._positionListener && this._positionListener.remove();\n      }\n    }, {\n      key: \"componentWillReceiveProps\",\n      value: function componentWillReceiveProps(nextProps) {\n        this._bindPosition(nextProps);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        this._pointerEvents = this._computePointerEvents();\n        return React.createElement(Component, _extends({}, this.props, {\n          pointerEvents: this._pointerEvents,\n          onComponentRef: this._onComponentRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }\n        }));\n      }\n    }, {\n      key: \"_onComponentRef\",\n      value: function _onComponentRef(component) {\n        this._component = component;\n\n        if (component) {\n          invariant(typeof component.setNativeProps === 'function', 'component must implement method `setNativeProps`');\n        }\n      }\n    }, {\n      key: \"_bindPosition\",\n      value: function _bindPosition(props) {\n        this._positionListener && this._positionListener.remove();\n        this._positionListener = new NavigationAnimatedValueSubscription(props.position, this._onPositionChange);\n      }\n    }, {\n      key: \"_onPositionChange\",\n      value: function _onPositionChange() {\n        if (this._component) {\n          var pointerEvents = this._computePointerEvents();\n\n          if (this._pointerEvents !== pointerEvents) {\n            this._pointerEvents = pointerEvents;\n\n            this._component.setNativeProps({\n              pointerEvents: pointerEvents\n            });\n          }\n        }\n      }\n    }, {\n      key: \"_computePointerEvents\",\n      value: function _computePointerEvents() {\n        var _this$props = this.props,\n            navigationState = _this$props.navigationState,\n            position = _this$props.position,\n            scene = _this$props.scene;\n\n        if (scene.isStale || navigationState.index !== scene.index) {\n          return scene.index > navigationState.index ? 'box-only' : 'none';\n        }\n\n        var offset = position.__getAnimatedValue() - navigationState.index;\n\n        if (Math.abs(offset) > MIN_POSITION_OFFSET) {\n          return 'box-only';\n        }\n\n        return 'auto';\n      }\n    }]);\n\n    return Container;\n  }(React.Component);\n\n  return Container;\n}\n\nmodule.exports = {\n  create: create\n};","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationPointerEventsContainer.js"],"names":["React","require","NavigationAnimatedValueSubscription","invariant","MIN_POSITION_OFFSET","create","Component","Container","props","context","_pointerEvents","_computePointerEvents","_onPositionChange","bind","_onComponentRef","_bindPosition","_positionListener","remove","nextProps","component","_component","setNativeProps","position","pointerEvents","navigationState","scene","isStale","index","offset","__getAnimatedValue","Math","abs","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Facebook, Inc. (\"Facebook\") owns all right, title and interest, including\n * all intellectual property and other proprietary rights, in and to the React\n * Native CustomComponents software (the \"Software\").  Subject to your\n * compliance with these terms, you are hereby granted a non-exclusive,\n * worldwide, royalty-free copyright license to (1) use and copy the Software;\n * and (2) reproduce and distribute the Software as part of your own software\n * (\"Your Software\").  Facebook reserves all rights not expressly granted to\n * you in this license agreement.\n *\n * THE SOFTWARE AND DOCUMENTATION, IF ANY, ARE PROVIDED \"AS IS\" AND ANY EXPRESS\n * OR IMPLIED WARRANTIES (INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE) ARE DISCLAIMED.\n * IN NO EVENT SHALL FACEBOOK OR ITS AFFILIATES, OFFICERS, DIRECTORS OR\n * EMPLOYEES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @providesModule NavigationPointerEventsContainer\n * @flow\n */\n'use strict';\n\nconst React = require('react');\nconst NavigationAnimatedValueSubscription = require('./NavigationAnimatedValueSubscription');\n\nconst invariant = require('fbjs/lib/invariant');\n\nimport type  {\n  NavigationSceneRendererProps,\n} from 'NavigationTypeDefinition';\n\ntype Props = NavigationSceneRendererProps;\n\nconst MIN_POSITION_OFFSET = 0.01;\n\n/**\n * Create a higher-order component that automatically computes the\n * `pointerEvents` property for a component whenever navigation position\n * changes.\n */\nfunction create(\n  Component: ReactClass<any>,\n): ReactClass {\n\n  class Container extends React.Component<any, Props, any> {\n\n    _component: any;\n    _onComponentRef: (view: any) => void;\n    _onPositionChange: (data: {value: number}) => void;\n    _pointerEvents: string;\n    _positionListener: ?NavigationAnimatedValueSubscription;\n\n    props: Props;\n\n    constructor(props: Props, context: any) {\n      super(props, context);\n      this._pointerEvents = this._computePointerEvents();\n    }\n\n    componentWillMount(): void {\n      this._onPositionChange = this._onPositionChange.bind(this);\n      this._onComponentRef = this._onComponentRef.bind(this);\n    }\n\n    componentDidMount(): void {\n      this._bindPosition(this.props);\n    }\n\n    componentWillUnmount(): void {\n      this._positionListener && this._positionListener.remove();\n    }\n\n    componentWillReceiveProps(nextProps: Props): void {\n      this._bindPosition(nextProps);\n    }\n\n    render(): ReactElement  {\n      this._pointerEvents = this._computePointerEvents();\n      return (\n        <Component\n          {...this.props}\n          pointerEvents={this._pointerEvents}\n          onComponentRef={this._onComponentRef}\n        />\n      );\n    }\n\n    _onComponentRef(component: any): void {\n      this._component = component;\n      if (component) {\n        invariant(\n          typeof component.setNativeProps === 'function',\n          'component must implement method `setNativeProps`',\n        );\n      }\n    }\n\n    _bindPosition(props: NavigationSceneRendererProps): void {\n      this._positionListener && this._positionListener.remove();\n      this._positionListener = new  NavigationAnimatedValueSubscription(\n        props.position,\n        this._onPositionChange,\n      );\n    }\n\n    _onPositionChange(): void {\n      if (this._component) {\n        const pointerEvents = this._computePointerEvents();\n        if (this._pointerEvents !== pointerEvents) {\n          this._pointerEvents = pointerEvents;\n          this._component.setNativeProps({pointerEvents});\n        }\n      }\n    }\n\n    _computePointerEvents(): string {\n      const {\n        navigationState,\n        position,\n        scene,\n      } = this.props;\n\n      if (scene.isStale || navigationState.index !== scene.index) {\n        // The scene isn't focused.\n        return scene.index > navigationState.index ?\n          'box-only' :\n          'none';\n      }\n\n      const offset = position.__getAnimatedValue() - navigationState.index;\n      if (Math.abs(offset) > MIN_POSITION_OFFSET) {\n        // The positon is still away from scene's index.\n        // Scene's children should not receive touches until the position\n        // is close enough to scene's index.\n        return 'box-only';\n      }\n\n      return 'auto';\n    }\n  }\n  return  Container;\n}\n\nmodule.exports = {\n  create,\n};\n"]},"metadata":{},"sourceType":"script"}