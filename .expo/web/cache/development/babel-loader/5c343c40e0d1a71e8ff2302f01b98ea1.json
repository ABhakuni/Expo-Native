{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _jsxFileName = \"/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationAnimatedView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Animated = require('react-native').Animated;\n\nvar NavigationContainer = require('./NavigationContainer');\n\nvar NavigationPropTypes = require('./NavigationPropTypes');\n\nvar NavigationScenesReducer = require('./NavigationScenesReducer');\n\nvar React = require('react');\n\nvar StyleSheet = require('react-native').StyleSheet;\n\nvar View = require('react-native').View;\n\nvar PropTypes = require('prop-types');\n\nfunction applyDefaultAnimation(position, navigationState) {\n  Animated.spring(position, {\n    bounciness: 0,\n    toValue: navigationState.index\n  }).start();\n}\n\nvar NavigationAnimatedView = function (_React$Component) {\n  _inherits(NavigationAnimatedView, _React$Component);\n\n  var _super = _createSuper(NavigationAnimatedView);\n\n  function NavigationAnimatedView(props, context) {\n    var _this;\n\n    _classCallCheck(this, NavigationAnimatedView);\n\n    _this = _super.call(this, props, context);\n    var layout = {\n      height: new Animated.Value(0),\n      initHeight: 0,\n      initWidth: 0,\n      isMeasured: false,\n      width: new Animated.Value(0)\n    };\n    _this.state = {\n      layout: layout,\n      position: new Animated.Value(_this.props.navigationState.index),\n      scenes: NavigationScenesReducer([], _this.props.navigationState)\n    };\n    return _this;\n  }\n\n  _createClass(NavigationAnimatedView, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._onLayout = this._onLayout.bind(this);\n      this._onProgressChange = this._onProgressChange.bind(this);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._positionListener = this.state.position.addListener(this._onProgressChange);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.navigationState !== this.props.navigationState) {\n        this.setState({\n          scenes: NavigationScenesReducer(this.state.scenes, nextProps.navigationState, this.props.navigationState)\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(lastProps) {\n      if (lastProps.navigationState.index !== this.props.navigationState.index) {\n        this.props.applyAnimation(this.state.position, this.props.navigationState, lastProps.navigationState);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.state.position.removeListener(this._positionListener);\n    }\n  }, {\n    key: \"_onProgressChange\",\n    value: function _onProgressChange(data) {\n      var delta = Math.abs(data.value - this.props.navigationState.index);\n\n      if (delta > Number.EPSILON) {\n        return;\n      }\n\n      var scenes = this.state.scenes.filter(function (scene) {\n        return !scene.isStale;\n      });\n\n      if (scenes.length !== this.state.scenes.length) {\n        this.setState({\n          scenes: scenes\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var overlay = this._renderOverlay();\n\n      var scenes = this._renderScenes();\n\n      return React.createElement(View, {\n        onLayout: this._onLayout,\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.scenes,\n        key: \"scenes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }, scenes), overlay);\n    }\n  }, {\n    key: \"_renderScenes\",\n    value: function _renderScenes() {\n      return this.state.scenes.map(this._renderScene, this);\n    }\n  }, {\n    key: \"_renderScene\",\n    value: function _renderScene(scene) {\n      var _this$props = this.props,\n          navigationState = _this$props.navigationState,\n          onNavigate = _this$props.onNavigate,\n          renderScene = _this$props.renderScene;\n      var _this$state = this.state,\n          position = _this$state.position,\n          scenes = _this$state.scenes;\n      return renderScene({\n        layout: this.state.layout,\n        navigationState: navigationState,\n        onNavigate: onNavigate,\n        position: position,\n        scene: scene,\n        scenes: scenes\n      });\n    }\n  }, {\n    key: \"_renderOverlay\",\n    value: function _renderOverlay() {\n      if (this.props.renderOverlay) {\n        var _this$props2 = this.props,\n            navigationState = _this$props2.navigationState,\n            onNavigate = _this$props2.onNavigate,\n            renderOverlay = _this$props2.renderOverlay;\n        var _this$state2 = this.state,\n            position = _this$state2.position,\n            scenes = _this$state2.scenes;\n        return renderOverlay({\n          layout: this.state.layout,\n          navigationState: navigationState,\n          onNavigate: onNavigate,\n          position: position,\n          scene: scenes[navigationState.index],\n          scenes: scenes\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_onLayout\",\n    value: function _onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          height = _event$nativeEvent$la.height,\n          width = _event$nativeEvent$la.width;\n\n      var layout = _objectSpread({}, this.state.layout, {\n        initHeight: height,\n        initWidth: width,\n        isMeasured: true\n      });\n\n      layout.height.setValue(height);\n      layout.width.setValue(width);\n      this.setState({\n        layout: layout\n      });\n    }\n  }]);\n\n  return NavigationAnimatedView;\n}(React.Component);\n\nNavigationAnimatedView.propTypes = {\n  applyAnimation: PropTypes.func,\n  navigationState: NavigationPropTypes.navigationState.isRequired,\n  onNavigate: PropTypes.func.isRequired,\n  renderOverlay: PropTypes.func,\n  renderScene: PropTypes.func.isRequired\n};\nNavigationAnimatedView.defaultProps = {\n  applyAnimation: applyDefaultAnimation\n};\nvar styles = StyleSheet.create({\n  scenes: {\n    flex: 1\n  }\n});\nNavigationAnimatedView = NavigationContainer.create(NavigationAnimatedView);\nmodule.exports = NavigationAnimatedView;","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationAnimatedView.js"],"names":["Animated","require","NavigationContainer","NavigationPropTypes","NavigationScenesReducer","React","StyleSheet","View","PropTypes","applyDefaultAnimation","position","navigationState","spring","bounciness","toValue","index","start","NavigationAnimatedView","props","context","layout","height","Value","initHeight","initWidth","isMeasured","width","state","scenes","_onLayout","bind","_onProgressChange","_positionListener","addListener","nextProps","setState","lastProps","applyAnimation","removeListener","data","delta","Math","abs","value","Number","EPSILON","filter","scene","isStale","length","overlay","_renderOverlay","_renderScenes","style","styles","map","_renderScene","onNavigate","renderScene","renderOverlay","event","nativeEvent","setValue","Component","propTypes","func","isRequired","defaultProps","create","flex","module","exports"],"mappings":"AAWA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBD,QAAzC;;AACA,IAAME,mBAAmB,GAAGD,OAAO,CAAC,uBAAD,CAAnC;;AACA,IAAME,mBAAmB,GAAGF,OAAO,CAAC,uBAAD,CAAnC;;AACA,IAAMG,uBAAuB,GAAGH,OAAO,CAAC,2BAAD,CAAvC;;AACA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,cAAD,CAAP,CAAwBK,UAA3C;;AACA,IAAMC,IAAI,GAAGN,OAAO,CAAC,cAAD,CAAP,CAAwBM,IAArC;;AA2BA,IAAMC,SAAS,GAAGP,OAAO,CAAC,YAAD,CAAzB;;AAEA,SAASQ,qBAAT,CACEC,QADF,EAEEC,eAFF,EAGQ;AACNX,EAAAA,QAAQ,CAACY,MAAT,CACEF,QADF,EAEE;AACEG,IAAAA,UAAU,EAAE,CADd;AAEEC,IAAAA,OAAO,EAAEH,eAAe,CAACI;AAF3B,GAFF,EAMEC,KANF;AAOD;;IAEKC,sB;;;;;AAsBJ,kCAAYC,KAAZ,EAA0BC,OAA1B,EAAwC;AAAA;;AAAA;;AACtC,8BAAMD,KAAN,EAAaC,OAAb;AAIA,QAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,IAAIrB,QAAQ,CAACsB,KAAb,CAAmB,CAAnB,CADK;AAEbC,MAAAA,UAAU,EAAE,CAFC;AAGbC,MAAAA,SAAS,EAAE,CAHE;AAIbC,MAAAA,UAAU,EAAE,KAJC;AAKbC,MAAAA,KAAK,EAAE,IAAI1B,QAAQ,CAACsB,KAAb,CAAmB,CAAnB;AALM,KAAf;AAQA,UAAKK,KAAL,GAAa;AACXP,MAAAA,MAAM,EAANA,MADW;AAEXV,MAAAA,QAAQ,EAAE,IAAIV,QAAQ,CAACsB,KAAb,CAAmB,MAAKJ,KAAL,CAAWP,eAAX,CAA2BI,KAA9C,CAFC;AAGXa,MAAAA,MAAM,EAAExB,uBAAuB,CAAC,EAAD,EAAK,MAAKc,KAAL,CAAWP,eAAhB;AAHpB,KAAb;AAbsC;AAkBvC;;;;yCAE0B;AACzB,WAAKkB,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,WAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;;wCAEyB;AACxB,WAAKE,iBAAL,GACE,KAAKL,KAAL,CAAWjB,QAAX,CAAoBuB,WAApB,CAAgC,KAAKF,iBAArC,CADF;AAED;;;8CAEyBG,S,EAAwB;AAChD,UAAIA,SAAS,CAACvB,eAAV,KAA8B,KAAKO,KAAL,CAAWP,eAA7C,EAA8D;AAC5D,aAAKwB,QAAL,CAAc;AACZP,UAAAA,MAAM,EAAExB,uBAAuB,CAC7B,KAAKuB,KAAL,CAAWC,MADkB,EAE7BM,SAAS,CAACvB,eAFmB,EAG7B,KAAKO,KAAL,CAAWP,eAHkB;AADnB,SAAd;AAOD;AACF;;;uCAEkByB,S,EAAwB;AACzC,UAAIA,SAAS,CAACzB,eAAV,CAA0BI,KAA1B,KAAoC,KAAKG,KAAL,CAAWP,eAAX,CAA2BI,KAAnE,EAA0E;AACxE,aAAKG,KAAL,CAAWmB,cAAX,CACE,KAAKV,KAAL,CAAWjB,QADb,EAEE,KAAKQ,KAAL,CAAWP,eAFb,EAGEyB,SAAS,CAACzB,eAHZ;AAKD;AACF;;;2CAE4B;AAC3B,WAAKgB,KAAL,CAAWjB,QAAX,CAAoB4B,cAApB,CAAmC,KAAKN,iBAAxC;AACD;;;sCAEiBO,I,EAAoB;AACpC,UAAMC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASH,IAAI,CAACI,KAAL,GAAa,KAAKzB,KAAL,CAAWP,eAAX,CAA2BI,KAAjD,CAAd;;AACA,UAAIyB,KAAK,GAAGI,MAAM,CAACC,OAAnB,EAA4B;AAC1B;AACD;;AAED,UAAMjB,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,CAAkBkB,MAAlB,CAAyB,UAAAC,KAAK,EAAI;AAC/C,eAAO,CAACA,KAAK,CAACC,OAAd;AACD,OAFc,CAAf;;AAIA,UAAIpB,MAAM,CAACqB,MAAP,KAAkB,KAAKtB,KAAL,CAAWC,MAAX,CAAkBqB,MAAxC,EAAgD;AAC9C,aAAKd,QAAL,CAAc;AAAEP,UAAAA,MAAM,EAANA;AAAF,SAAd;AACD;AACF;;;6BAEsB;AACrB,UAAMsB,OAAO,GAAG,KAAKC,cAAL,EAAhB;;AACA,UAAMvB,MAAM,GAAG,KAAKwB,aAAL,EAAf;;AACA,aACE,oBAAC,IAAD;AACE,QAAA,QAAQ,EAAE,KAAKvB,SADjB;AAEE,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWmC,KAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAAC1B,MAApB;AAA4B,QAAA,GAAG,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,MADH,CAHF,EAMGsB,OANH,CADF;AAUD;;;oCAEqC;AACpC,aAAO,KAAKvB,KAAL,CAAWC,MAAX,CAAkB2B,GAAlB,CAAsB,KAAKC,YAA3B,EAAyC,IAAzC,CAAP;AACD;;;iCAEYT,K,EAAuC;AAAA,wBAK9C,KAAK7B,KALyC;AAAA,UAEhDP,eAFgD,eAEhDA,eAFgD;AAAA,UAGhD8C,UAHgD,eAGhDA,UAHgD;AAAA,UAIhDC,WAJgD,eAIhDA,WAJgD;AAAA,wBAU9C,KAAK/B,KAVyC;AAAA,UAQhDjB,QARgD,eAQhDA,QARgD;AAAA,UAShDkB,MATgD,eAShDA,MATgD;AAYlD,aAAO8B,WAAW,CAAC;AACjBtC,QAAAA,MAAM,EAAE,KAAKO,KAAL,CAAWP,MADF;AAEjBT,QAAAA,eAAe,EAAfA,eAFiB;AAGjB8C,QAAAA,UAAU,EAAVA,UAHiB;AAIjB/C,QAAAA,QAAQ,EAARA,QAJiB;AAKjBqC,QAAAA,KAAK,EAALA,KALiB;AAMjBnB,QAAAA,MAAM,EAANA;AANiB,OAAD,CAAlB;AAQD;;;qCAE+B;AAC9B,UAAI,KAAKV,KAAL,CAAWyC,aAAf,EAA8B;AAAA,2BAKxB,KAAKzC,KALmB;AAAA,YAE1BP,eAF0B,gBAE1BA,eAF0B;AAAA,YAG1B8C,UAH0B,gBAG1BA,UAH0B;AAAA,YAI1BE,aAJ0B,gBAI1BA,aAJ0B;AAAA,2BAUxB,KAAKhC,KAVmB;AAAA,YAQ1BjB,QAR0B,gBAQ1BA,QAR0B;AAAA,YAS1BkB,MAT0B,gBAS1BA,MAT0B;AAY5B,eAAO+B,aAAa,CAAC;AACnBvC,UAAAA,MAAM,EAAE,KAAKO,KAAL,CAAWP,MADA;AAEnBT,UAAAA,eAAe,EAAfA,eAFmB;AAGnB8C,UAAAA,UAAU,EAAVA,UAHmB;AAInB/C,UAAAA,QAAQ,EAARA,QAJmB;AAKnBqC,UAAAA,KAAK,EAAEnB,MAAM,CAACjB,eAAe,CAACI,KAAjB,CALM;AAMnBa,UAAAA,MAAM,EAANA;AANmB,SAAD,CAApB;AAQD;;AACD,aAAO,IAAP;AACD;;;8BAESgC,K,EAAkB;AAAA,kCACFA,KAAK,CAACC,WAAN,CAAkBzC,MADhB;AAAA,UACnBC,MADmB,yBACnBA,MADmB;AAAA,UACXK,KADW,yBACXA,KADW;;AAG1B,UAAMN,MAAM,qBACP,KAAKO,KAAL,CAAWP,MADJ;AAEVG,QAAAA,UAAU,EAAEF,MAFF;AAGVG,QAAAA,SAAS,EAAEE,KAHD;AAIVD,QAAAA,UAAU,EAAE;AAJF,QAAZ;;AAOAL,MAAAA,MAAM,CAACC,MAAP,CAAcyC,QAAd,CAAuBzC,MAAvB;AACAD,MAAAA,MAAM,CAACM,KAAP,CAAaoC,QAAb,CAAsBpC,KAAtB;AAEA,WAAKS,QAAL,CAAc;AAAEf,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD;;;;EA5KOf,KAAK,CAAC0D,S;;AADV9C,sB,CAUG+C,S,GAAY;AACjB3B,EAAAA,cAAc,EAAE7B,SAAS,CAACyD,IADT;AAEjBtD,EAAAA,eAAe,EAAER,mBAAmB,CAACQ,eAApB,CAAoCuD,UAFpC;AAGjBT,EAAAA,UAAU,EAAEjD,SAAS,CAACyD,IAAV,CAAeC,UAHV;AAIjBP,EAAAA,aAAa,EAAEnD,SAAS,CAACyD,IAJR;AAKjBP,EAAAA,WAAW,EAAElD,SAAS,CAACyD,IAAV,CAAeC;AALX,C;AAVfjD,sB,CAkBGkD,Y,GAAe;AACpB9B,EAAAA,cAAc,EAAE5B;AADI,C;AA8JxB,IAAM6C,MAAM,GAAGhD,UAAU,CAAC8D,MAAX,CAAkB;AAC/BxC,EAAAA,MAAM,EAAE;AACNyC,IAAAA,IAAI,EAAE;AADA;AADuB,CAAlB,CAAf;AAMApD,sBAAsB,GAAGf,mBAAmB,CAACkE,MAApB,CAA2BnD,sBAA3B,CAAzB;AAEAqD,MAAM,CAACC,OAAP,GAAiBtD,sBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationAnimatedView\n * @flow\n */\n'use strict';\n\nconst Animated = require('react-native').Animated;\nconst NavigationContainer = require('./NavigationContainer');\nconst NavigationPropTypes = require('./NavigationPropTypes');\nconst NavigationScenesReducer = require('./NavigationScenesReducer');\nconst React = require('react');\nconst StyleSheet = require('react-native').StyleSheet;\nconst View = require('react-native').View;\n\nimport type {\n  NavigationActionCaller,\n  NavigationAnimatedValue,\n  NavigationAnimationSetter,\n  NavigationLayout,\n  NavigationParentState,\n  NavigationScene,\n  NavigationSceneRenderer,\n} from 'NavigationTypeDefinition';\n\ntype Props = {\n  applyAnimation: NavigationAnimationSetter,\n  navigationState: NavigationParentState,\n  onNavigate: NavigationActionCaller,\n  renderOverlay: ?NavigationSceneRenderer,\n  renderScene: NavigationSceneRenderer,\n  style: any,\n};\n\ntype State = {\n  layout: NavigationLayout,\n  position: NavigationAnimatedValue,\n  scenes: Array<NavigationScene>,\n};\n\nconst PropTypes = require('prop-types');\n\nfunction applyDefaultAnimation(\n  position: NavigationAnimatedValue,\n  navigationState: NavigationParentState,\n): void {\n  Animated.spring(\n    position,\n    {\n      bounciness: 0,\n      toValue: navigationState.index,\n    }\n  ).start();\n}\n\nclass NavigationAnimatedView\n  extends React.Component<any, Props, State> {\n\n  _onLayout: (event: any) => void;\n  _onProgressChange: (data: {value: number}) => void;\n  _positionListener: any;\n\n  props: Props;\n  state: State;\n\n  static propTypes = {\n    applyAnimation: PropTypes.func,\n    navigationState: NavigationPropTypes.navigationState.isRequired,\n    onNavigate: PropTypes.func.isRequired,\n    renderOverlay: PropTypes.func,\n    renderScene: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    applyAnimation: applyDefaultAnimation,\n  };\n\n  constructor(props: Props, context: any) {\n    super(props, context);\n\n    // The initial layout isn't measured. Measured layout will be only available\n    // when the component is mounted.\n    const layout = {\n      height: new Animated.Value(0),\n      initHeight: 0,\n      initWidth: 0,\n      isMeasured: false,\n      width: new Animated.Value(0),\n    };\n\n    this.state = {\n      layout,\n      position: new Animated.Value(this.props.navigationState.index),\n      scenes: NavigationScenesReducer([], this.props.navigationState),\n    };\n  }\n\n  componentWillMount(): void {\n    this._onLayout = this._onLayout.bind(this);\n    this._onProgressChange = this._onProgressChange.bind(this);\n  }\n\n  componentDidMount(): void {\n    this._positionListener =\n      this.state.position.addListener(this._onProgressChange);\n  }\n\n  componentWillReceiveProps(nextProps: Props): void {\n    if (nextProps.navigationState !== this.props.navigationState) {\n      this.setState({\n        scenes: NavigationScenesReducer(\n          this.state.scenes,\n          nextProps.navigationState,\n          this.props.navigationState\n        ),\n      });\n    }\n  }\n\n  componentDidUpdate(lastProps: Props): void {\n    if (lastProps.navigationState.index !== this.props.navigationState.index) {\n      this.props.applyAnimation(\n        this.state.position,\n        this.props.navigationState,\n        lastProps.navigationState\n      );\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.state.position.removeListener(this._positionListener);\n  }\n\n  _onProgressChange(data: Object): void {\n    const delta = Math.abs(data.value - this.props.navigationState.index);\n    if (delta > Number.EPSILON) {\n      return;\n    }\n\n    const scenes = this.state.scenes.filter(scene => {\n      return !scene.isStale;\n    });\n\n    if (scenes.length !== this.state.scenes.length) {\n      this.setState({ scenes });\n    }\n  }\n\n  render(): ReactElement {\n    const overlay = this._renderOverlay();\n    const scenes = this._renderScenes();\n    return (\n      <View\n        onLayout={this._onLayout}\n        style={this.props.style}>\n        <View style={styles.scenes} key=\"scenes\">\n          {scenes}\n        </View>\n        {overlay}\n      </View>\n    );\n  }\n\n  _renderScenes(): Array<?ReactElement> {\n    return this.state.scenes.map(this._renderScene, this);\n  }\n\n  _renderScene(scene: NavigationScene): ?ReactElement {\n    const {\n      navigationState,\n      onNavigate,\n      renderScene,\n    } = this.props;\n\n    const {\n      position,\n      scenes,\n    } = this.state;\n\n    return renderScene({\n      layout: this.state.layout,\n      navigationState,\n      onNavigate,\n      position,\n      scene,\n      scenes,\n    });\n  }\n\n  _renderOverlay(): ?ReactElement {\n    if (this.props.renderOverlay) {\n      const {\n        navigationState,\n        onNavigate,\n        renderOverlay,\n      } = this.props;\n\n      const {\n        position,\n        scenes,\n      } = this.state;\n\n      return renderOverlay({\n        layout: this.state.layout,\n        navigationState,\n        onNavigate,\n        position,\n        scene: scenes[navigationState.index],\n        scenes,\n      });\n    }\n    return null;\n  }\n\n  _onLayout(event: any): void {\n    const {height, width} = event.nativeEvent.layout;\n\n    const layout = {\n      ...this.state.layout,\n      initHeight: height,\n      initWidth: width,\n      isMeasured: true,\n    };\n\n    layout.height.setValue(height);\n    layout.width.setValue(width);\n\n    this.setState({ layout });\n  }\n}\n\nconst styles = StyleSheet.create({\n  scenes: {\n    flex: 1,\n  },\n});\n\nNavigationAnimatedView = NavigationContainer.create(NavigationAnimatedView);\n\nmodule.exports = NavigationAnimatedView;\n"]},"metadata":{},"sourceType":"script"}