{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AsyncStorage = require('react-native').AsyncStorage;\n\nvar Linking = require('react-native').Linking;\n\nvar NavigationPropTypes = require('./NavigationPropTypes');\n\nvar NavigationStateUtils = require('./NavigationStateUtils');\n\nvar Platform = require('react-native').Platform;\n\nvar React = require('react');\n\nfunction getBackAction() {\n  return {\n    type: 'BackAction'\n  };\n}\n\nvar PropTypes = React.PropTypes;\n\nvar NavigationRootContainer = function (_React$Component) {\n  _inherits(NavigationRootContainer, _React$Component);\n\n  var _super = _createSuper(NavigationRootContainer);\n\n  function NavigationRootContainer(props) {\n    var _this;\n\n    _classCallCheck(this, NavigationRootContainer);\n\n    _this = _super.call(this, props);\n    var navState = null;\n\n    if (!_this.props.persistenceKey) {\n      navState = NavigationStateUtils.getParent(_this.props.reducer(null, props.initialAction));\n    }\n\n    _this.state = {\n      navState: navState\n    };\n    return _this;\n  }\n\n  _createClass(NavigationRootContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.handleNavigation = this.handleNavigation.bind(this);\n      this._handleOpenURLEvent = this._handleOpenURLEvent.bind(this);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.linkingActionMap) {\n        Linking.getInitialURL().then(this._handleOpenURL.bind(this));\n        Platform.OS === 'ios' && Linking.addEventListener('url', this._handleOpenURLEvent);\n      }\n\n      if (this.props.persistenceKey) {\n        AsyncStorage.getItem(this.props.persistenceKey, function (err, storedString) {\n          if (err || !storedString) {\n            _this2.setState({\n              navState: _this2.props.reducer(null, _this2.props.initialAction)\n            });\n\n            return;\n          }\n\n          _this2.setState({\n            navState: JSON.parse(storedString)\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (Platform.OS === 'ios') {\n        Linking.removeEventListener('url', this._handleOpenURLEvent);\n      }\n    }\n  }, {\n    key: \"_handleOpenURLEvent\",\n    value: function _handleOpenURLEvent(event) {\n      this._handleOpenURL(event.url);\n    }\n  }, {\n    key: \"_handleOpenURL\",\n    value: function _handleOpenURL(url) {\n      if (!this.props.linkingActionMap) {\n        return;\n      }\n\n      var action = this.props.linkingActionMap(url);\n\n      if (action) {\n        this.handleNavigation(action);\n      }\n    }\n  }, {\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        onNavigate: this.handleNavigation\n      };\n    }\n  }, {\n    key: \"handleNavigation\",\n    value: function handleNavigation(action) {\n      var navState = this.props.reducer(this.state.navState, action);\n\n      if (navState === this.state.navState) {\n        return false;\n      }\n\n      this.setState({\n        navState: navState\n      });\n\n      if (this.props.persistenceKey) {\n        AsyncStorage.setItem(this.props.persistenceKey, JSON.stringify(navState));\n      }\n\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.renderNavigation(this.state.navState, this.handleNavigation);\n      return navigation;\n    }\n  }]);\n\n  return NavigationRootContainer;\n}(React.Component);\n\nNavigationRootContainer.propTypes = {\n  initialAction: NavigationPropTypes.action.isRequired,\n  linkingActionMap: PropTypes.func,\n  persistenceKey: PropTypes.string,\n  reducer: PropTypes.func.isRequired,\n  renderNavigation: PropTypes.func.isRequired\n};\nNavigationRootContainer.defaultProps = {\n  initialAction: {\n    type: 'RootContainerInitialAction'\n  }\n};\nNavigationRootContainer.childContextTypes = {\n  onNavigate: PropTypes.func\n};\nNavigationRootContainer.getBackAction = getBackAction;\nmodule.exports = NavigationRootContainer;","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationRootContainer.js"],"names":["AsyncStorage","require","Linking","NavigationPropTypes","NavigationStateUtils","Platform","React","getBackAction","type","PropTypes","NavigationRootContainer","props","navState","persistenceKey","getParent","reducer","initialAction","state","handleNavigation","bind","_handleOpenURLEvent","linkingActionMap","getInitialURL","then","_handleOpenURL","OS","addEventListener","getItem","err","storedString","setState","JSON","parse","removeEventListener","event","url","action","onNavigate","setItem","stringify","navigation","renderNavigation","Component","propTypes","isRequired","func","string","defaultProps","childContextTypes","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationRootContainer\n * @flow\n */\n'use strict';\n\nconst AsyncStorage = require('react-native').AsyncStorage;\nconst Linking = require('react-native').Linking;\nconst NavigationPropTypes = require('./NavigationPropTypes');\nconst NavigationStateUtils = require('./NavigationStateUtils');\nconst Platform = require('react-native').Platform;\nconst React = require('react');\n\nimport type {\n  NavigationAction,\n  NavigationParentState,\n  NavigationReducer,\n  NavigationRenderer,\n} from 'NavigationTypeDefinition';\n\nexport type BackAction = {\n  type: 'BackAction',\n};\n\ntype Props = {\n  /*\n   * The default action to be passed into the reducer when getting the first\n   * state. Defaults to {type: 'RootContainerInitialAction'}\n   */\n  initialAction: NavigationAction,\n\n  /*\n   * Provide linkingActionMap to instruct the container to subscribe to linking\n   * events, and use this mapper to convert URIs into actions that your app can\n   * handle\n   */\n  linkingActionMap: ?((uri: ?string) => NavigationAction),\n\n  /*\n   * Provide this key, and the container will store the navigation state in\n   * AsyncStorage through refreshes, with the provided key\n   */\n  persistenceKey: ?string,\n\n\n  /*\n   * A function that will output the latest navigation state as a function of\n   * the (optional) previous state, and an action\n   */\n  reducer: NavigationReducer,\n\n\n  /*\n   * Set up the rendering of the app for a given navigation state\n   */\n  renderNavigation: NavigationRenderer,\n};\n\ntype State = {\n  navState: ?NavigationParentState,\n};\n\nfunction getBackAction(): BackAction {\n  return { type: 'BackAction' };\n}\n\nconst {PropTypes} = React;\n\nclass NavigationRootContainer extends React.Component<any, Props, State> {\n  _handleOpenURLEvent: Function;\n\n  props: Props;\n  state: State;\n\n  static propTypes = {\n    initialAction: NavigationPropTypes.action.isRequired,\n    linkingActionMap: PropTypes.func,\n    persistenceKey: PropTypes.string,\n    reducer: PropTypes.func.isRequired,\n    renderNavigation: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    initialAction: { type: 'RootContainerInitialAction' },\n  };\n\n  static childContextTypes = {\n    onNavigate: PropTypes.func,\n  };\n\n\n  static getBackAction = getBackAction;\n\n  constructor(props: Props) {\n    super(props);\n\n    let navState = null;\n    if (!this.props.persistenceKey) {\n      navState = NavigationStateUtils.getParent(\n        this.props.reducer(null, props.initialAction)\n      );\n    }\n    this.state = { navState };\n  }\n\n  componentWillMount(): void {\n    (this: any).handleNavigation = this.handleNavigation.bind(this);\n    (this: any)._handleOpenURLEvent = this._handleOpenURLEvent.bind(this);\n  }\n\n  componentDidMount(): void {\n    if (this.props.linkingActionMap) {\n      Linking.getInitialURL().then(this._handleOpenURL.bind(this));\n      Platform.OS === 'ios' && Linking.addEventListener('url', this._handleOpenURLEvent);\n    }\n    if (this.props.persistenceKey) {\n      AsyncStorage.getItem(this.props.persistenceKey, (err, storedString) => {\n        if (err || !storedString) {\n          this.setState({\n            // $FlowFixMe - navState is missing properties :(\n            navState: this.props.reducer(null, this.props.initialAction),\n          });\n          return;\n        }\n        this.setState({\n          navState: JSON.parse(storedString),\n        });\n      });\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (Platform.OS === 'ios') {\n      Linking.removeEventListener('url', this._handleOpenURLEvent);\n    }\n  }\n\n  _handleOpenURLEvent(event: {url: string}): void {\n    this._handleOpenURL(event.url);\n  }\n\n  _handleOpenURL(url: ?string): void {\n    if (!this.props.linkingActionMap) {\n      return;\n    }\n    const action = this.props.linkingActionMap(url);\n    if (action) {\n      this.handleNavigation(action);\n    }\n  }\n\n  getChildContext(): Object {\n    return {\n      onNavigate: this.handleNavigation,\n    };\n  }\n\n  handleNavigation(action: Object): boolean {\n    const navState = this.props.reducer(this.state.navState, action);\n    if (navState === this.state.navState) {\n      return false;\n    }\n    this.setState({\n      // $FlowFixMe - navState is missing properties :(\n      navState,\n    });\n\n    if (this.props.persistenceKey) {\n      AsyncStorage.setItem(this.props.persistenceKey, JSON.stringify(navState));\n    }\n\n    return true;\n  }\n\n  render(): ReactElement {\n    const navigation = this.props.renderNavigation(\n      this.state.navState,\n      this.handleNavigation\n    );\n    return navigation;\n  }\n}\n\nmodule.exports = NavigationRootContainer;\n"]},"metadata":{},"sourceType":"script"}