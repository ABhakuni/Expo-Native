{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _jsxFileName = \"/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationCardStack.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar NavigationAnimatedView = require('./NavigationAnimatedView');\n\nvar NavigationCard = require('./NavigationCard');\n\nvar NavigationCardStackStyleInterpolator = require('./NavigationCardStackStyleInterpolator');\n\nvar NavigationContainer = require('./NavigationContainer');\n\nvar NavigationCardStackPanResponder = require('./NavigationCardStackPanResponder');\n\nvar NavigationPropTypes = require('./NavigationPropTypes');\n\nvar React = require('react');\n\nvar ReactComponentWithPureRenderMixin = require('react-addons-pure-render-mixin');\n\nvar StyleSheet = require('react-native').StyleSheet;\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar PropTypes = React.PropTypes;\nvar Directions = NavigationCardStackPanResponder.Directions;\n\nvar NavigationCardStack = function (_React$Component) {\n  _inherits(NavigationCardStack, _React$Component);\n\n  var _super = _createSuper(NavigationCardStack);\n\n  function NavigationCardStack(props, context) {\n    _classCallCheck(this, NavigationCardStack);\n\n    return _super.call(this, props, context);\n  }\n\n  _createClass(NavigationCardStack, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._renderScene = this._renderScene.bind(this);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return ReactComponentWithPureRenderMixin.shouldComponentUpdate.call(this, nextProps, nextState);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationAnimatedView, {\n        navigationState: this.props.navigationState,\n        renderOverlay: this.props.renderOverlay,\n        renderScene: this._renderScene,\n        style: [styles.animatedView, this.props.style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"_renderScene\",\n    value: function _renderScene(props) {\n      var isVertical = this.props.direction === 'vertical';\n      var style = isVertical ? NavigationCardStackStyleInterpolator.forVertical(props) : NavigationCardStackStyleInterpolator.forHorizontal(props);\n      var panHandlers = isVertical ? NavigationCardStackPanResponder.forVertical(props) : NavigationCardStackPanResponder.forHorizontal(props);\n      return React.createElement(NavigationCard, _extends({}, props, {\n        key: 'card_' + props.scene.key,\n        panHandlers: panHandlers,\n        renderScene: this.props.renderScene,\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return NavigationCardStack;\n}(React.Component);\n\nNavigationCardStack.propTypes = {\n  direction: PropTypes.oneOf([Directions.HORIZONTAL, Directions.VERTICAL]),\n  navigationState: NavigationPropTypes.navigationParentState.isRequired,\n  renderOverlay: PropTypes.func,\n  renderScene: PropTypes.func.isRequired\n};\nNavigationCardStack.defaultProps = {\n  direction: Directions.HORIZONTAL,\n  renderOverlay: emptyFunction.thatReturnsNull\n};\nvar styles = StyleSheet.create({\n  animatedView: {\n    flex: 1\n  }\n});\nmodule.exports = NavigationContainer.create(NavigationCardStack);","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationCardStack.js"],"names":["NavigationAnimatedView","require","NavigationCard","NavigationCardStackStyleInterpolator","NavigationContainer","NavigationCardStackPanResponder","NavigationPropTypes","React","ReactComponentWithPureRenderMixin","StyleSheet","emptyFunction","PropTypes","Directions","NavigationCardStack","props","context","_renderScene","bind","nextProps","nextState","shouldComponentUpdate","call","navigationState","renderOverlay","styles","animatedView","style","isVertical","direction","forVertical","forHorizontal","panHandlers","scene","key","renderScene","Component","propTypes","oneOf","HORIZONTAL","VERTICAL","navigationParentState","isRequired","func","defaultProps","thatReturnsNull","create","flex","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Facebook, Inc. (\"Facebook\") owns all right, title and interest, including\n * all intellectual property and other proprietary rights, in and to the React\n * Native CustomComponents software (the \"Software\").  Subject to your\n * compliance with these terms, you are hereby granted a non-exclusive,\n * worldwide, royalty-free copyright license to (1) use and copy the Software;\n * and (2) reproduce and distribute the Software as part of your own software\n * (\"Your Software\").  Facebook reserves all rights not expressly granted to\n * you in this license agreement.\n *\n * THE SOFTWARE AND DOCUMENTATION, IF ANY, ARE PROVIDED \"AS IS\" AND ANY EXPRESS\n * OR IMPLIED WARRANTIES (INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE) ARE DISCLAIMED.\n * IN NO EVENT SHALL FACEBOOK OR ITS AFFILIATES, OFFICERS, DIRECTORS OR\n * EMPLOYEES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @providesModule NavigationCardStack\n * @flow\n */\n'use strict';\n\nconst NavigationAnimatedView = require('./NavigationAnimatedView');\nconst NavigationCard = require('./NavigationCard');\nconst NavigationCardStackStyleInterpolator = require('./NavigationCardStackStyleInterpolator');\nconst NavigationContainer = require('./NavigationContainer');\nconst NavigationCardStackPanResponder = require('./NavigationCardStackPanResponder');\nconst NavigationPropTypes = require('./NavigationPropTypes');\nconst React = require('react');\nconst ReactComponentWithPureRenderMixin = require('react-addons-pure-render-mixin');\nconst StyleSheet = require('react-native').StyleSheet;\n\nconst emptyFunction = require('fbjs/lib/emptyFunction');\n\nconst {PropTypes} = React;\nconst {Directions} = NavigationCardStackPanResponder;\n\nimport type {\n  NavigationParentState,\n  NavigationSceneRenderer,\n  NavigationSceneRendererProps,\n} from 'NavigationTypeDefinition';\n\nimport type {\n  NavigationGestureDirection,\n} from 'NavigationCardStackPanResponder';\n\ntype Props = {\n  direction: NavigationGestureDirection,\n  navigationState: NavigationParentState,\n  renderOverlay: ?NavigationSceneRenderer,\n  renderScene: NavigationSceneRenderer,\n};\n\ntype DefaultProps = {\n  direction: NavigationGestureDirection,\n  renderOverlay: ?NavigationSceneRenderer,\n};\n\n/**\n * A controlled navigation view that renders a stack of cards.\n *\n *     +------------+\n *   +-+            |\n * +-+ |            |\n * | | |            |\n * | | |  Focused   |\n * | | |   Card     |\n * | | |            |\n * +-+ |            |\n *   +-+            |\n *     +------------+\n */\nclass NavigationCardStack extends React.Component<DefaultProps, Props, void> {\n  _renderScene : NavigationSceneRenderer;\n\n  static propTypes = {\n    direction: PropTypes.oneOf([Directions.HORIZONTAL, Directions.VERTICAL]),\n    navigationState: NavigationPropTypes.navigationParentState.isRequired,\n    renderOverlay: PropTypes.func,\n    renderScene: PropTypes.func.isRequired,\n  };\n\n  static defaultProps: DefaultProps = {\n    direction: Directions.HORIZONTAL,\n    renderOverlay: emptyFunction.thatReturnsNull,\n  };\n\n  constructor(props: Props, context: any) {\n    super(props, context);\n  }\n\n  componentWillMount(): void {\n    this._renderScene = this._renderScene.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps: Object, nextState: void): boolean {\n    return ReactComponentWithPureRenderMixin.shouldComponentUpdate.call(\n      this,\n      nextProps,\n      nextState\n    );\n  }\n\n  render(): ReactElement {\n    return (\n      <NavigationAnimatedView\n        navigationState={this.props.navigationState}\n        renderOverlay={this.props.renderOverlay}\n        renderScene={this._renderScene}\n        // $FlowFixMe - style should be declared\n        style={[styles.animatedView, this.props.style]}\n      />\n    );\n  }\n\n  _renderScene(props: NavigationSceneRendererProps): ReactElement {\n    const isVertical = this.props.direction === 'vertical';\n\n    const style = isVertical ?\n      NavigationCardStackStyleInterpolator.forVertical(props) :\n      NavigationCardStackStyleInterpolator.forHorizontal(props);\n\n    const panHandlers = isVertical ?\n      NavigationCardStackPanResponder.forVertical(props) :\n      NavigationCardStackPanResponder.forHorizontal(props);\n\n    return (\n      <NavigationCard\n        {...props}\n        key={'card_' + props.scene.key}\n        panHandlers={panHandlers}\n        renderScene={this.props.renderScene}\n        style={style}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  animatedView: {\n    flex: 1,\n  },\n});\n\nmodule.exports = NavigationContainer.create(NavigationCardStack);\n"]},"metadata":{},"sourceType":"script"}