{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/Users/apple/Documents/janitri/sampleapp/src/components/Form.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Form = function (_Component) {\n  (0, _inherits2.default)(Form, _Component);\n\n  var _super = _createSuper(Form);\n\n  function Form(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Form);\n    _this = _super.call(this, props);\n\n    _this.saveData = function _callee() {\n      var _this$state, email, password, loginDetails, _loginDetails, ld;\n\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, email = _this$state.email, password = _this$state.password;\n              loginDetails = {\n                email: email,\n                password: password\n              };\n\n              if (!(_this.props.type !== 'Login')) {\n                _context.next = 9;\n                break;\n              }\n\n              _reactNative.AsyncStorage.setItem('loginDetails', JSON.stringify(loginDetails));\n\n              _reactNative.Keyboard.dismiss();\n\n              alert(\"You successfully registered. Email: \" + email + ' password: ' + password);\n\n              _this.login();\n\n              _context.next = 21;\n              break;\n\n            case 9:\n              if (!(_this.props.type == 'Login')) {\n                _context.next = 21;\n                break;\n              }\n\n              _context.prev = 10;\n              _context.next = 13;\n              return _regenerator.default.awrap(_reactNative.AsyncStorage.getItem('loginDetails'));\n\n            case 13:\n              _loginDetails = _context.sent;\n              ld = JSON.parse(_loginDetails);\n\n              if (ld.email != null && ld.password != null) {\n                if (ld.email == email && ld.password == password) {\n                  alert('Go in!');\n                } else {\n                  alert('Email and Password does not exist!');\n                }\n              }\n\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](10);\n              alert(_context.t0);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[10, 18]], Promise);\n    };\n\n    _this.showData = function _callee2() {\n      var loginDetails, ld;\n      return _regenerator.default.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regenerator.default.awrap(_reactNative.AsyncStorage.getItem('loginDetails'));\n\n            case 2:\n              loginDetails = _context2.sent;\n              ld = JSON.parse(loginDetails);\n              alert('email: ' + ld.email + ' ' + 'password: ' + ld.password);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputBox,\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        underlineColorAndroid: \"rgba(0,0,0,0)\",\n        placeholder: \"Email\",\n        placeholderTextColor: \"#002f6c\",\n        selectionColor: \"#fff\",\n        keyboardType: \"email-address\",\n        onSubmitEditing: function onSubmitEditing() {\n          return _this2.password.focus();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputBox,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        underlineColorAndroid: \"rgba(0,0,0,0)\",\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        placeholderTextColor: \"#002f6c\",\n        ref: function ref(input) {\n          return _this2.password = input;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        onPress: this.saveData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, this.props.type)));\n    }\n  }]);\n  return Form;\n}(_react.Component);\n\nexports.default = Form;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputBox: {\n    width: 300,\n    backgroundColor: '#eeeeee',\n    borderRadius: 25,\n    paddingHorizontal: 16,\n    fontSize: 16,\n    color: '#002f6c',\n    marginVertical: 10\n  },\n  button: {\n    width: 300,\n    backgroundColor: '#4f83cc',\n    borderRadius: 25,\n    marginVertical: 10,\n    paddingVertical: 12\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#ffffff',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/src/components/Form.js"],"names":["Form","props","saveData","state","email","password","loginDetails","type","AsyncStorage","setItem","JSON","stringify","Keyboard","dismiss","alert","login","getItem","ld","parse","showData","styles","container","inputBox","setState","focus","input","button","buttonText","Component","StyleSheet","create","justifyContent","alignItems","width","backgroundColor","borderRadius","paddingHorizontal","fontSize","color","marginVertical","paddingVertical","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, AsyncStorage, Keyboard } from 'react-native';\n\nexport default class Form extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            email:'',\n            password: ''\n        }\n    }\n\n    saveData =async()=>{\n        const {email,password} = this.state;\n\n        //save data with asyncstorage\n        let loginDetails={\n            email: email,\n            password: password\n        }\n\n        if(this.props.type !== 'Login')\n        {\n            AsyncStorage.setItem('loginDetails', JSON.stringify(loginDetails));\n\n            Keyboard.dismiss();\n            alert(\"You successfully registered. Email: \" + email + ' password: ' + password);\n            this.login();\n        }\n        else if(this.props.type == 'Login')\n        {\n            try{\n                let loginDetails = await AsyncStorage.getItem('loginDetails');\n                let ld = JSON.parse(loginDetails);\n\n                if (ld.email != null && ld.password != null)\n                {\n                    if (ld.email == email && ld.password == password)\n                    {\n                        alert('Go in!');\n                    }\n                    else\n                    {\n                        alert('Email and Password does not exist!');\n                    }\n                }\n\n            }catch(error)\n            {\n                alert(error);\n            }\n        }\n    }\n\n    showData = async()=>{\n        let loginDetails = await AsyncStorage.getItem('loginDetails');\n        let ld = JSON.parse(loginDetails);\n        alert('email: '+ ld.email + ' ' + 'password: ' + ld.password);\n    }\n\n    render() {\n        return(\n            <View style={styles.container}>\n                <TextInput style={styles.inputBox}\n                onChangeText={(email) => this.setState({email})}\n                underlineColorAndroid='rgba(0,0,0,0)' \n                placeholder=\"Email\"\n                placeholderTextColor = \"#002f6c\"\n                selectionColor=\"#fff\"\n                keyboardType=\"email-address\"\n                onSubmitEditing={()=> this.password.focus()}/>\n                \n                <TextInput style={styles.inputBox}\n                onChangeText={(password) => this.setState({password})} \n                underlineColorAndroid='rgba(0,0,0,0)' \n                placeholder=\"Password\"\n                secureTextEntry={true}\n                placeholderTextColor = \"#002f6c\"\n                ref={(input) => this.password = input}\n                />\n\n                <TouchableOpacity style={styles.button}> \n                    <Text style={styles.buttonText} onPress={this.saveData}>{this.props.type}</Text>\n                </TouchableOpacity>\n            </View>\n            \n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    inputBox: {\n        width: 300,\n        backgroundColor: '#eeeeee', \n        borderRadius: 25,\n        paddingHorizontal: 16,\n        fontSize: 16,\n        color: '#002f6c',\n        marginVertical: 10\n    },\n    button: {\n        width: 300,\n        backgroundColor: '#4f83cc',\n        borderRadius: 25,\n        marginVertical: 10,\n        paddingVertical: 12\n    },\n    buttonText: {\n        fontSize: 16,\n        fontWeight: '500',\n        color: '#ffffff',\n        textAlign: 'center'\n    }\n});"]},"metadata":{},"sourceType":"script"}