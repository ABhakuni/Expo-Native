{"ast":null,"code":"'use strict';\n\nfunction forInitial(props) {\n  var navigationState = props.navigationState,\n      scene = props.scene;\n  var focused = navigationState.index === scene.index;\n  var opacity = focused ? 1 : 0;\n  var dir = scene.index > navigationState.index ? 1 : -1;\n  var translate = focused ? 0 : 1000000 * dir;\n  return {\n    opacity: opacity,\n    transform: [{\n      translateX: translate\n    }, {\n      translateY: translate\n    }]\n  };\n}\n\nfunction forHorizontal(props) {\n  var layout = props.layout,\n      position = props.position,\n      scene = props.scene;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n\n  var index = scene.index;\n  var inputRange = [index - 1, index, index + 1];\n  var width = layout.initWidth;\n  var translateX = position.interpolate({\n    inputRange: inputRange,\n    outputRange: [width, 0, -width]\n  });\n  return {\n    opacity: 1,\n    shadowColor: 'transparent',\n    shadowRadius: 0,\n    transform: [{\n      scale: 1\n    }, {\n      translateX: translateX\n    }, {\n      translateY: 0\n    }]\n  };\n}\n\nmodule.exports = {\n  forHorizontal: forHorizontal\n};","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationPagerStyleInterpolator.js"],"names":["forInitial","props","navigationState","scene","focused","index","opacity","dir","translate","transform","translateX","translateY","forHorizontal","layout","position","isMeasured","inputRange","width","initWidth","interpolate","outputRange","shadowColor","shadowRadius","scale","module","exports"],"mappings":"AAgCA;;AAwBA,SAASA,UAAT,CAAoBC,KAApB,EAAiE;AAAA,MAE7DC,eAF6D,GAI3DD,KAJ2D,CAE7DC,eAF6D;AAAA,MAG7DC,KAH6D,GAI3DF,KAJ2D,CAG7DE,KAH6D;AAM/D,MAAMC,OAAO,GAAGF,eAAe,CAACG,KAAhB,KAA0BF,KAAK,CAACE,KAAhD;AACA,MAAMC,OAAO,GAAGF,OAAO,GAAG,CAAH,GAAO,CAA9B;AAEA,MAAMG,GAAG,GAAGJ,KAAK,CAACE,KAAN,GAAcH,eAAe,CAACG,KAA9B,GAAsC,CAAtC,GAA0C,CAAC,CAAvD;AACA,MAAMG,SAAS,GAAGJ,OAAO,GAAG,CAAH,GAAQ,UAAUG,GAA3C;AACA,SAAO;AACLD,IAAAA,OAAO,EAAPA,OADK;AAELG,IAAAA,SAAS,EAAE,CACT;AAAEC,MAAAA,UAAU,EAAEF;AAAd,KADS,EAET;AAAEG,MAAAA,UAAU,EAAEH;AAAd,KAFS;AAFN,GAAP;AAOD;;AAED,SAASI,aAAT,CAAuBX,KAAvB,EAAoE;AAAA,MAEhEY,MAFgE,GAK9DZ,KAL8D,CAEhEY,MAFgE;AAAA,MAGhEC,QAHgE,GAK9Db,KAL8D,CAGhEa,QAHgE;AAAA,MAIhEX,KAJgE,GAK9DF,KAL8D,CAIhEE,KAJgE;;AAOlE,MAAI,CAACU,MAAM,CAACE,UAAZ,EAAwB;AACtB,WAAOf,UAAU,CAACC,KAAD,CAAjB;AACD;;AAED,MAAMI,KAAK,GAAGF,KAAK,CAACE,KAApB;AACA,MAAMW,UAAU,GAAG,CAACX,KAAK,GAAG,CAAT,EAAYA,KAAZ,EAAmBA,KAAK,GAAG,CAA3B,CAAnB;AAEA,MAAMY,KAAK,GAAGJ,MAAM,CAACK,SAArB;AACA,MAAMR,UAAU,GAAGI,QAAQ,CAACK,WAAT,CAAqB;AACtCH,IAAAA,UAAU,EAAVA,UADsC;AAEtCI,IAAAA,WAAW,EAAE,CAACH,KAAD,EAAQ,CAAR,EAAW,CAACA,KAAZ;AAFyB,GAArB,CAAnB;AAKA,SAAO;AACLX,IAAAA,OAAO,EAAG,CADL;AAELe,IAAAA,WAAW,EAAE,aAFR;AAGLC,IAAAA,YAAY,EAAE,CAHT;AAILb,IAAAA,SAAS,EAAE,CACT;AAAEc,MAAAA,KAAK,EAAE;AAAT,KADS,EAET;AAAEb,MAAAA,UAAU,EAAVA;AAAF,KAFS,EAGT;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAHS;AAJN,GAAP;AAUD;;AAEDa,MAAM,CAACC,OAAP,GAAiB;AACfb,EAAAA,aAAa,EAAbA;AADe,CAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Facebook, Inc. (\"Facebook\") owns all right, title and interest, including\n * all intellectual property and other proprietary rights, in and to the React\n * Native CustomComponents software (the \"Software\").  Subject to your\n * compliance with these terms, you are hereby granted a non-exclusive,\n * worldwide, royalty-free copyright license to (1) use and copy the Software;\n * and (2) reproduce and distribute the Software as part of your own software\n * (\"Your Software\").  Facebook reserves all rights not expressly granted to\n * you in this license agreement.\n *\n * THE SOFTWARE AND DOCUMENTATION, IF ANY, ARE PROVIDED \"AS IS\" AND ANY EXPRESS\n * OR IMPLIED WARRANTIES (INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE) ARE DISCLAIMED.\n * IN NO EVENT SHALL FACEBOOK OR ITS AFFILIATES, OFFICERS, DIRECTORS OR\n * EMPLOYEES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @providesModule NavigationPagerStyleInterpolator\n * @flow\n */\n'use strict';\n\nimport type  {\n  NavigationSceneRendererProps,\n} from 'NavigationTypeDefinition';\n\n/**\n * Utility that builds the style for the card in the cards list.\n *\n * +-------------+-------------+-------------+\n * |             |             |             |\n * |             |             |             |\n * |             |             |             |\n * |    Next     |   Focused   |  Previous   |\n * |    Card     |    Card     |    Card     |\n * |             |             |             |\n * |             |             |             |\n * |             |             |             |\n * +-------------+-------------+-------------+\n */\n\n/**\n * Render the initial style when the initial layout isn't measured yet.\n */\nfunction forInitial(props: NavigationSceneRendererProps): Object {\n  const {\n    navigationState,\n    scene,\n  } = props;\n\n  const focused = navigationState.index === scene.index;\n  const opacity = focused ? 1 : 0;\n  // If not focused, move the scene to the far away.\n  const dir = scene.index > navigationState.index ? 1 : -1;\n  const translate = focused ? 0 : (1000000 * dir);\n  return {\n    opacity,\n    transform: [\n      { translateX: translate },\n      { translateY: translate },\n    ],\n  };\n}\n\nfunction forHorizontal(props: NavigationSceneRendererProps): Object {\n  const {\n    layout,\n    position,\n    scene,\n  } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n\n  const index = scene.index;\n  const inputRange = [index - 1, index, index + 1];\n\n  const width = layout.initWidth;\n  const translateX = position.interpolate({\n    inputRange,\n    outputRange: [width, 0, -width],\n  });\n\n  return {\n    opacity : 1,\n    shadowColor: 'transparent',\n    shadowRadius: 0,\n    transform: [\n      { scale: 1 },\n      { translateX },\n      { translateY: 0 },\n    ],\n  };\n}\n\nmodule.exports = {\n  forHorizontal,\n};\n"]},"metadata":{},"sourceType":"script"}