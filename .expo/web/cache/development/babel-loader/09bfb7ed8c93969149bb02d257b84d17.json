{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar NavigationFindReducer = require('./NavigationFindReducer');\n\nvar NavigationStateUtils = require('./NavigationStateUtils');\n\nvar ActionTypes = {\n  JUMP_TO: 'react-native/NavigationExperimental/tabs-jumpTo'\n};\n\nfunction NavigationTabsJumpToAction(index) {\n  return {\n    type: ActionTypes.JUMP_TO,\n    index: index\n  };\n}\n\nfunction NavigationTabsReducer(_ref) {\n  var key = _ref.key,\n      initialIndex = _ref.initialIndex,\n      tabReducers = _ref.tabReducers;\n  return function (lastNavState, action) {\n    if (!lastNavState) {\n      lastNavState = {\n        children: tabReducers.map(function (reducer) {\n          return reducer(null, null);\n        }),\n        index: initialIndex || 0,\n        key: key\n      };\n    }\n\n    var lastParentNavState = NavigationStateUtils.getParent(lastNavState);\n\n    if (!action || !lastParentNavState) {\n      return lastNavState;\n    }\n\n    if (action.type === ActionTypes.JUMP_TO && action.index !== lastParentNavState.index) {\n      return NavigationStateUtils.jumpToIndex(lastParentNavState, action.index);\n    }\n\n    var subReducers = tabReducers.map(function (tabReducer, tabIndex) {\n      return function (navState, tabAction) {\n        if (!navState) {\n          return lastParentNavState;\n        }\n\n        var parentState = NavigationStateUtils.getParent(navState);\n        var tabState = parentState && parentState.children[tabIndex];\n        var nextTabState = tabReducer(tabState, tabAction);\n\n        if (nextTabState && tabState !== nextTabState) {\n          var tabs = parentState && parentState.children || [];\n          tabs[tabIndex] = nextTabState;\n          return _objectSpread({}, lastParentNavState, {\n            tabs: tabs,\n            index: tabIndex\n          });\n        }\n\n        return lastParentNavState;\n      };\n    });\n    var selectedTabReducer = subReducers.splice(lastParentNavState.index, 1)[0];\n    subReducers.unshift(function (navState, action) {\n      if (navState && action.type === 'BackAction') {\n        return NavigationStateUtils.jumpToIndex(lastParentNavState, initialIndex || 0);\n      }\n\n      return lastParentNavState;\n    });\n    subReducers.unshift(selectedTabReducer);\n    var findReducer = NavigationFindReducer(subReducers, lastParentNavState);\n    return findReducer(lastParentNavState, action);\n  };\n}\n\nNavigationTabsReducer.JumpToAction = NavigationTabsJumpToAction;\nmodule.exports = NavigationTabsReducer;","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationTabsReducer.js"],"names":["NavigationFindReducer","require","NavigationStateUtils","ActionTypes","JUMP_TO","NavigationTabsJumpToAction","index","type","NavigationTabsReducer","key","initialIndex","tabReducers","lastNavState","action","children","map","reducer","lastParentNavState","getParent","jumpToIndex","subReducers","tabReducer","tabIndex","navState","tabAction","parentState","tabState","nextTabState","tabs","selectedTabReducer","splice","unshift","findReducer","JumpToAction","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationTabsReducer\n * @flow\n */\n'use strict';\n\nconst NavigationFindReducer = require('./NavigationFindReducer');\nconst NavigationStateUtils = require('./NavigationStateUtils');\n\nimport type {\n  NavigationReducer,\n  NavigationState,\n} from 'NavigationTypeDefinition';\n\nconst ActionTypes = {\n  JUMP_TO: 'react-native/NavigationExperimental/tabs-jumpTo',\n};\n\nexport type JumpToAction = {\n  type: typeof ActionTypes.JUMP_TO,\n  index: number,\n};\nfunction NavigationTabsJumpToAction(index: number): JumpToAction {\n  return {\n    type: ActionTypes.JUMP_TO,\n    index,\n  };\n}\n\ntype TabsReducerConfig = {\n  key: string;\n  initialIndex: number;\n  tabReducers: Array<NavigationReducer>;\n};\n\nfunction NavigationTabsReducer({key, initialIndex, tabReducers}: TabsReducerConfig): NavigationReducer {\n  return function(lastNavState: ?NavigationState, action: ?any): NavigationState {\n    if (!lastNavState) {\n      lastNavState = {\n        children: tabReducers.map(reducer => reducer(null, null)),\n        index: initialIndex || 0,\n        key,\n      };\n    }\n    const lastParentNavState = NavigationStateUtils.getParent(lastNavState);\n    if (!action || !lastParentNavState) {\n      return lastNavState;\n    }\n    if (\n      action.type === ActionTypes.JUMP_TO &&\n      action.index !== lastParentNavState.index\n    ) {\n      return NavigationStateUtils.jumpToIndex(\n        lastParentNavState,\n        action.index,\n      );\n    }\n    const subReducers = tabReducers.map((tabReducer, tabIndex) => {\n      return function(navState: ?NavigationState, tabAction: any): NavigationState {\n        if (!navState) {\n          return lastParentNavState;\n        }\n        const parentState = NavigationStateUtils.getParent(navState);\n        const tabState = parentState && parentState.children[tabIndex];\n        const nextTabState = tabReducer(tabState, tabAction);\n        if (nextTabState && tabState !== nextTabState) {\n          const tabs = parentState && parentState.children || [];\n          tabs[tabIndex] = nextTabState;\n          return {\n            ...lastParentNavState,\n            tabs,\n            index: tabIndex,\n          };\n        }\n        return lastParentNavState;\n      };\n    });\n    let selectedTabReducer = subReducers.splice(lastParentNavState.index, 1)[0];\n    subReducers.unshift(function(navState: ?NavigationState, action: any): NavigationState {\n      if (navState && action.type === 'BackAction') {\n        return NavigationStateUtils.jumpToIndex(\n          lastParentNavState,\n          initialIndex || 0\n        );\n      }\n      return lastParentNavState;\n    });\n    subReducers.unshift(selectedTabReducer);\n    const findReducer = NavigationFindReducer(subReducers, lastParentNavState);\n    return findReducer(lastParentNavState, action);\n  };\n}\n\nNavigationTabsReducer.JumpToAction = NavigationTabsJumpToAction;\n\nmodule.exports = NavigationTabsReducer;\n"]},"metadata":{},"sourceType":"script"}