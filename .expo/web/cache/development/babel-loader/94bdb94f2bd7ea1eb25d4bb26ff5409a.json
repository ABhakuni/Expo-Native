{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar invariant = require('fbjs/lib/invariant');\n\nfunction getParent(state) {\n  if (state instanceof Object && state.children instanceof Array && state.children[0] !== undefined && typeof state.index === 'number' && state.children[state.index] !== undefined) {\n    return state;\n  }\n\n  return null;\n}\n\nfunction get(state, key) {\n  var parentState = getParent(state);\n\n  if (!parentState) {\n    return null;\n  }\n\n  var childState = parentState.children.find(function (child) {\n    return child.key === key;\n  });\n  return childState || null;\n}\n\nfunction indexOf(state, key) {\n  var parentState = getParent(state);\n\n  if (!parentState) {\n    return null;\n  }\n\n  var index = parentState.children.map(function (child) {\n    return child.key;\n  }).indexOf(key);\n\n  if (index === -1) {\n    return null;\n  }\n\n  return index;\n}\n\nfunction push(state, newChildState) {\n  var lastChildren = state.children;\n  return _objectSpread({}, state, {\n    children: [].concat(_toConsumableArray(lastChildren), [newChildState]),\n    index: lastChildren.length\n  });\n}\n\nfunction pop(state) {\n  var lastChildren = state.children;\n  return _objectSpread({}, state, {\n    children: lastChildren.slice(0, lastChildren.length - 1),\n    index: lastChildren.length - 2\n  });\n}\n\nfunction reset(state, nextChildren, nextIndex) {\n  var parentState = getParent(state);\n\n  if (!parentState) {\n    return state;\n  }\n\n  var children = nextChildren || parentState.children;\n  var index = nextIndex == null ? parentState.index : nextIndex;\n\n  if (children === parentState.children && index === parentState.index) {\n    return state;\n  }\n\n  return _objectSpread({}, parentState, {\n    children: children,\n    index: index\n  });\n}\n\nfunction set(state, key, nextChildren, nextIndex) {\n  if (!state) {\n    return {\n      children: nextChildren,\n      index: nextIndex,\n      key: key\n    };\n  }\n\n  var parentState = getParent(state);\n\n  if (!parentState) {\n    return {\n      children: nextChildren,\n      index: nextIndex,\n      key: key\n    };\n  }\n\n  if (nextChildren === parentState.children && nextIndex === parentState.index && key === parentState.key) {\n    return parentState;\n  }\n\n  return _objectSpread({}, parentState, {\n    children: nextChildren,\n    index: nextIndex,\n    key: key\n  });\n}\n\nfunction jumpToIndex(state, index) {\n  var parentState = getParent(state);\n\n  if (parentState && parentState.index === index) {\n    return parentState;\n  }\n\n  return _objectSpread({}, parentState, {\n    index: index\n  });\n}\n\nfunction jumpTo(state, key) {\n  var parentState = getParent(state);\n\n  if (!parentState) {\n    return state;\n  }\n\n  var index = parentState.children.indexOf(parentState.children.find(function (child) {\n    return child.key === key;\n  }));\n  invariant(index !== -1, 'Cannot find child with matching key in this NavigationState');\n  return _objectSpread({}, parentState, {\n    index: index\n  });\n}\n\nfunction replaceAt(state, key, newState) {\n  var parentState = getParent(state);\n\n  if (!parentState) {\n    return state;\n  }\n\n  var children = _toConsumableArray(parentState.children);\n\n  var index = parentState.children.indexOf(parentState.children.find(function (child) {\n    return child.key === key;\n  }));\n  invariant(index !== -1, 'Cannot find child with matching key in this NavigationState');\n  children[index] = newState;\n  return _objectSpread({}, parentState, {\n    children: children\n  });\n}\n\nfunction replaceAtIndex(state, index, newState) {\n  var parentState = getParent(state);\n\n  if (!parentState) {\n    return state;\n  }\n\n  var children = _toConsumableArray(parentState.children);\n\n  children[index] = newState;\n  return _objectSpread({}, parentState, {\n    children: children\n  });\n}\n\nvar NavigationStateUtils = {\n  getParent: getParent,\n  get: get,\n  indexOf: indexOf,\n  push: push,\n  pop: pop,\n  reset: reset,\n  set: set,\n  jumpToIndex: jumpToIndex,\n  jumpTo: jumpTo,\n  replaceAt: replaceAt,\n  replaceAtIndex: replaceAtIndex\n};\nmodule.exports = NavigationStateUtils;","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationStateUtils.js"],"names":["invariant","require","getParent","state","Object","children","Array","undefined","index","get","key","parentState","childState","find","child","indexOf","map","push","newChildState","lastChildren","length","pop","slice","reset","nextChildren","nextIndex","set","jumpToIndex","jumpTo","replaceAt","newState","replaceAtIndex","NavigationStateUtils","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationStateUtils\n * @flow\n */\n'use strict';\n\nconst invariant = require('fbjs/lib/invariant');\n\nimport type {\n  NavigationState,\n  NavigationParentState,\n} from 'NavigationTypeDefinition';\n\nfunction getParent(state: NavigationState): ?NavigationParentState {\n  if (\n    (state instanceof Object) &&\n    (state.children instanceof Array) &&\n    (state.children[0] !== undefined) &&\n    (typeof state.index === 'number') &&\n    (state.children[state.index] !== undefined)\n  ) {\n    return state;\n  }\n  return null;\n}\n\nfunction get(state: NavigationState, key: string): ?NavigationState {\n  const parentState = getParent(state);\n  if (!parentState) {\n    return null;\n  }\n  const childState = parentState.children.find(child => child.key === key);\n  return childState || null;\n}\n\nfunction indexOf(state: NavigationState, key: string): ?number {\n  const parentState = getParent(state);\n  if (!parentState) {\n    return null;\n  }\n  const index = parentState.children.map(child => child.key).indexOf(key);\n  if (index === -1) {\n    return null;\n  }\n  return index;\n}\n\nfunction push(state: NavigationParentState, newChildState: NavigationState): NavigationParentState {\n  var lastChildren: Array<NavigationState> = state.children;\n  return {\n    ...state,\n    children: [\n      ...lastChildren,\n      newChildState,\n    ],\n    index: lastChildren.length,\n  };\n}\n\nfunction pop(state: NavigationParentState): NavigationParentState {\n  const lastChildren = state.children;\n  return {\n    ...state,\n    children: lastChildren.slice(0, lastChildren.length - 1),\n    index: lastChildren.length - 2,\n  };\n}\n\nfunction reset(state: NavigationState, nextChildren: ?Array<NavigationState>, nextIndex: ?number): NavigationState {\n  const parentState = getParent(state);\n  if (!parentState) {\n    return state;\n  }\n  const children = nextChildren || parentState.children;\n  const index = nextIndex == null ? parentState.index : nextIndex;\n  if (children === parentState.children && index === parentState.index) {\n    return state;\n  }\n  return {\n    ...parentState,\n    children,\n    index,\n  };\n}\n\nfunction set(state: ?NavigationState, key: string, nextChildren: Array<NavigationState>, nextIndex: number): NavigationState {\n  if (!state) {\n    return {\n      children: nextChildren,\n      index: nextIndex,\n      key,\n    };\n  }\n  const parentState = getParent(state);\n  if (!parentState) {\n    return {\n      children: nextChildren,\n      index: nextIndex,\n      key,\n    };\n  }\n  if (nextChildren === parentState.children && nextIndex === parentState.index && key === parentState.key) {\n    return parentState;\n  }\n  return {\n    ...parentState,\n    children: nextChildren,\n    index: nextIndex,\n    key,\n  };\n}\n\nfunction jumpToIndex(state: NavigationState, index: number): NavigationState {\n  const parentState = getParent(state);\n  if (parentState && parentState.index === index) {\n    return parentState;\n  }\n  return {\n    ...parentState,\n    index,\n  };\n}\n\nfunction jumpTo(state: NavigationState, key: string): NavigationState {\n  const parentState = getParent(state);\n  if (!parentState) {\n    return state;\n  }\n  const index = parentState.children.indexOf(parentState.children.find(child => child.key === key));\n  invariant(\n    index !== -1,\n    'Cannot find child with matching key in this NavigationState'\n  );\n  return {\n    ...parentState,\n    index,\n  };\n}\n\nfunction replaceAt(state: NavigationState, key: string, newState: NavigationState): NavigationState {\n  const parentState = getParent(state);\n  if (!parentState) {\n    return state;\n  }\n  const children = [...parentState.children];\n  const index = parentState.children.indexOf(parentState.children.find(child => child.key === key));\n  invariant(\n    index !== -1,\n    'Cannot find child with matching key in this NavigationState'\n  );\n  children[index] = newState;\n  return {\n    ...parentState,\n    children,\n  };\n}\n\nfunction replaceAtIndex(state: NavigationState, index: number, newState: NavigationState): NavigationState {\n  const parentState = getParent(state);\n  if (!parentState) {\n    return state;\n  }\n  const children = [...parentState.children];\n  children[index] = newState;\n  return {\n    ...parentState,\n    children,\n  };\n}\n\nconst NavigationStateUtils = {\n  getParent,\n  get: get,\n  indexOf,\n  push,\n  pop,\n  reset,\n  set: set,\n  jumpToIndex,\n  jumpTo,\n  replaceAt,\n  replaceAtIndex,\n};\n\nmodule.exports = NavigationStateUtils;\n"]},"metadata":{},"sourceType":"script"}