{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Actions = _interopRequireDefault(require(\"./Actions\"));\n\nvar _menu_burger = _interopRequireDefault(require(\"./menu_burger.png\"));\n\nvar _back_chevron = _interopRequireDefault(require(\"./back_chevron.png\"));\n\nvar _jsxFileName = \"/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-router-flux/src/NavBar.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar styles = _reactNative.StyleSheet.create({\n  title: {\n    textAlign: 'center',\n    color: '#0A0A0A',\n    fontSize: 18,\n    width: 180,\n    alignSelf: 'center'\n  },\n  titleImage: {\n    width: 180,\n    alignSelf: 'center'\n  },\n  titleWrapper: _objectSpread({\n    marginTop: 10,\n    position: 'absolute'\n  }, _reactNative.Platform.select({\n    ios: {\n      top: 20\n    },\n    android: {\n      top: 5\n    },\n    windows: {\n      top: 5\n    }\n  }), {\n    left: 0,\n    right: 0\n  }),\n  header: _objectSpread({\n    backgroundColor: '#EFEFF2',\n    paddingTop: 0,\n    top: 0\n  }, _reactNative.Platform.select({\n    ios: {\n      height: 64\n    },\n    android: {\n      height: 54\n    },\n    windows: {\n      height: 54\n    }\n  }), {\n    right: 0,\n    left: 0,\n    borderBottomWidth: 0.5,\n    borderBottomColor: '#828287',\n    position: 'absolute'\n  }),\n  backButton: _objectSpread({\n    height: 37,\n    position: 'absolute'\n  }, _reactNative.Platform.select({\n    ios: {\n      top: 20\n    },\n    android: {\n      top: 10\n    },\n    windows: {\n      top: 8\n    }\n  }), {\n    left: 2,\n    padding: 8,\n    flexDirection: 'row',\n    transform: [{\n      scaleX: _reactNative.I18nManager.isRTL ? -1 : 1\n    }]\n  }),\n  rightButton: _objectSpread({\n    height: 37,\n    position: 'absolute'\n  }, _reactNative.Platform.select({\n    ios: {\n      top: 20\n    },\n    android: {\n      top: 10\n    },\n    windows: {\n      top: 8\n    }\n  }), {\n    right: 2,\n    padding: 8\n  }),\n  leftButton: _objectSpread({\n    height: 37,\n    position: 'absolute'\n  }, _reactNative.Platform.select({\n    ios: {\n      top: 20\n    },\n    android: {\n      top: 10\n    },\n    windows: {\n      top: 8\n    }\n  }), {\n    left: 2,\n    padding: 8\n  }),\n  barRightButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'right',\n    fontSize: 17\n  },\n  barBackButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'left',\n    fontSize: 17,\n    paddingLeft: 6\n  },\n  barLeftButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'left',\n    fontSize: 17\n  },\n  backButtonImage: {\n    width: 13,\n    height: 21\n  },\n  defaultImageStyle: {\n    height: 24,\n    resizeMode: 'contain'\n  }\n});\n\nvar propTypes = {\n  navigationState: _propTypes.default.object,\n  backButtonImage: _reactNative.Image.propTypes.source,\n  wrapBy: _propTypes.default.any,\n  component: _propTypes.default.any,\n  backButtonTextStyle: _reactNative.Text.propTypes.style,\n  leftButtonStyle: _reactNative.ViewPropTypes.style,\n  rightButtonStyle: _reactNative.ViewPropTypes.style,\n  leftButtonIconStyle: _reactNative.Image.propTypes.style,\n  getTitle: _propTypes.default.func,\n  titleWrapperStyle: _reactNative.Text.propTypes.style,\n  titleStyle: _reactNative.Text.propTypes.style,\n  titleOpacity: _propTypes.default.number,\n  titleProps: _propTypes.default.any,\n  position: _propTypes.default.object,\n  navigationBarStyle: _reactNative.ViewPropTypes.style,\n  navigationBarBackgroundImage: _reactNative.Image.propTypes.source,\n  navigationBarBackgroundImageStyle: _reactNative.Image.propTypes.style,\n  navigationBarTitleImage: _reactNative.Image.propTypes.source,\n  navigationBarTitleImageStyle: _reactNative.Image.propTypes.style,\n  navigationBarShowImageSelection: _propTypes.default.bool,\n  navigationBarSelecionStyle: _reactNative.ViewPropTypes.style,\n  renderTitle: _propTypes.default.any\n};\nvar contextTypes = {\n  drawer: _propTypes.default.object\n};\nvar defaultProps = {\n  drawerImage: _menu_burger.default,\n  backButtonImage: _back_chevron.default,\n  titleOpacity: 1\n};\n\nvar NavBar = function (_React$Component) {\n  (0, _inherits2.default)(NavBar, _React$Component);\n\n  var _super = _createSuper(NavBar);\n\n  function NavBar(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, NavBar);\n    _this = _super.call(this, props);\n    _this.renderRightButton = _this.renderRightButton.bind((0, _assertThisInitialized2.default)(_this));\n    _this.renderBackButton = _this.renderBackButton.bind((0, _assertThisInitialized2.default)(_this));\n    _this.renderLeftButton = _this.renderLeftButton.bind((0, _assertThisInitialized2.default)(_this));\n    _this.renderTitle = _this.renderTitle.bind((0, _assertThisInitialized2.default)(_this));\n    _this.renderImageTitle = _this.renderImageTitle.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(NavBar, [{\n    key: \"renderBackButton\",\n    value: function renderBackButton() {\n      var state = this.props.navigationState;\n      var childState = state.children[state.index];\n      var BackButton = childState.component && childState.component.backButton || state.backButton || childState.backButton;\n      var textButtonStyle = [styles.barBackButtonText, this.props.backButtonTextStyle, state.backButtonTextStyle, childState.backButtonTextStyle];\n      var style = [styles.backButton, this.props.leftButtonStyle, state.leftButtonStyle, childState.leftButtonStyle];\n\n      if (state.index === 0 && (!state.parentIndex || state.parentIndex === 0)) {\n        return null;\n      }\n\n      if (BackButton) {\n        return _react.default.createElement(BackButton, (0, _extends2.default)({\n          testID: \"backNavButton\",\n          textButtonStyle: textButtonStyle\n        }, childState, {\n          style: style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      var buttonImage = childState.backButtonImage || state.backButtonImage || this.props.backButtonImage;\n      var onPress = childState.onBack || childState.component.onBack;\n\n      if (onPress) {\n        onPress = onPress.bind(null, state);\n      } else {\n        onPress = _Actions.default.pop;\n      }\n\n      var text = childState.backTitle ? _react.default.createElement(_reactNative.Text, {\n        style: textButtonStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 8\n        }\n      }, childState.backTitle) : null;\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        testID: \"backNavButton\",\n        style: style,\n        onPress: onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 7\n        }\n      }, buttonImage && !childState.hideBackImage && _react.default.createElement(_reactNative.Image, {\n        source: buttonImage,\n        style: [styles.backButtonImage, this.props.leftButtonIconStyle, state.barButtonIconStyle, state.leftButtonIconStyle, childState.leftButtonIconStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }\n      }), text);\n    }\n  }, {\n    key: \"renderRightButton\",\n    value: function renderRightButton(navProps) {\n      var self = this;\n      var drawer = this.context.drawer;\n\n      function tryRender(state, wrapBy) {\n        if (!state) {\n          return null;\n        }\n\n        var onPress = state.onRight;\n        var buttonImage = state.rightButtonImage;\n        var menuIcon = state.drawerIcon;\n        var style = [styles.rightButton, self.props.rightButtonStyle, state.rightButtonStyle];\n        var textStyle = [styles.barRightButtonText, self.props.rightButtonTextStyle, state.rightButtonTextStyle];\n        var rightButtonStyle = [styles.defaultImageStyle, state.rightButtonIconStyle];\n        var rightTitle = state.getRightTitle ? state.getRightTitle(navProps) : state.rightTitle;\n\n        if (state.rightButton) {\n          var Button = state.rightButton;\n\n          if (wrapBy) {\n            Button = wrapBy(Button);\n          }\n\n          return _react.default.createElement(Button, (0, _extends2.default)({}, self.props, state, {\n            key: 'rightNavBarBtn',\n            testID: \"rightNavButton\",\n            style: style,\n            textButtonStyle: textStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 11\n            }\n          }));\n        }\n\n        if (!onPress && !!drawer && typeof drawer.toggle === 'function' && drawer.props.side === 'right') {\n          buttonImage = state.drawerImage;\n\n          if (buttonImage || menuIcon) {\n            onPress = drawer.toggle;\n          }\n\n          if (!menuIcon) {\n            menuIcon = _react.default.createElement(_reactNative.Image, {\n              source: buttonImage,\n              style: rightButtonStyle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 13\n              }\n            });\n          }\n        }\n\n        if (onPress && (rightTitle || buttonImage)) {\n          onPress = onPress.bind(null, state);\n          return _react.default.createElement(_reactNative.TouchableOpacity, {\n            key: 'rightNavBarBtn',\n            testID: \"rightNavButton\",\n            style: style,\n            onPress: onPress,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 11\n            }\n          }, rightTitle && _react.default.createElement(_reactNative.Text, {\n            style: textStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }\n          }, rightTitle), buttonImage && _react.default.createElement(_reactNative.View, {\n            style: {\n              flex: 1,\n              justifyContent: 'center',\n              alignItems: 'flex-end'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }\n          }, menuIcon || _react.default.createElement(_reactNative.Image, {\n            source: buttonImage,\n            style: state.rightButtonIconStyle || styles.defaultImageStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 30\n            }\n          })));\n        }\n\n        if (!!state.onRight ^ !!(typeof rightTitle !== 'undefined' || typeof buttonImage !== 'undefined')) {\n          console.warn(\"Both onRight and rightTitle/rightButtonImage\\n            must be specified for the scene: \" + state.name);\n        }\n\n        return null;\n      }\n\n      return tryRender(this.props.component, this.props.wrapBy) || tryRender(this.props);\n    }\n  }, {\n    key: \"renderLeftButton\",\n    value: function renderLeftButton(navProps) {\n      var self = this;\n      var drawer = this.context.drawer;\n\n      function tryRender(state, wrapBy) {\n        var onPress = state.onLeft;\n        var buttonImage = state.leftButtonImage;\n        var menuIcon = state.drawerIcon;\n        var style = [styles.leftButton, self.props.leftButtonStyle, state.leftButtonStyle];\n        var textStyle = [styles.barLeftButtonText, self.props.leftButtonTextStyle, state.leftButtonTextStyle];\n        var leftButtonStyle = [styles.defaultImageStyle, state.leftButtonIconStyle];\n        var leftTitle = state.getLeftTitle ? state.getLeftTitle(navProps) : state.leftTitle;\n\n        if (state.leftButton) {\n          var Button = state.leftButton;\n\n          if (wrapBy) {\n            Button = wrapBy(Button);\n          }\n\n          return _react.default.createElement(Button, (0, _extends2.default)({}, self.props, state, {\n            key: 'leftNavBarBtn',\n            testID: \"leftNavButton\",\n            style: style,\n            textStyle: textStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 11\n            }\n          }));\n        }\n\n        if (!onPress && !!drawer && typeof drawer.toggle === 'function' && drawer.props.side === 'left') {\n          buttonImage = state.drawerImage;\n\n          if (buttonImage || menuIcon) {\n            onPress = drawer.toggle;\n          }\n\n          if (!menuIcon) {\n            menuIcon = _react.default.createElement(_reactNative.Image, {\n              source: buttonImage,\n              style: leftButtonStyle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 13\n              }\n            });\n          }\n        }\n\n        if (onPress && (leftTitle || buttonImage)) {\n          onPress = onPress.bind(null, state);\n          return _react.default.createElement(_reactNative.TouchableOpacity, {\n            key: 'leftNavBarBtn',\n            testID: \"leftNavButton\",\n            style: style,\n            onPress: onPress,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 11\n            }\n          }, leftTitle && _react.default.createElement(_reactNative.Text, {\n            style: textStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }\n          }, leftTitle), buttonImage && _react.default.createElement(_reactNative.View, {\n            style: {\n              flex: 1,\n              justifyContent: 'center',\n              alignItems: 'flex-start'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }\n          }, menuIcon || _react.default.createElement(_reactNative.Image, {\n            source: buttonImage,\n            style: state.leftButtonIconStyle || styles.defaultImageStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 30\n            }\n          })));\n        }\n\n        if (!!state.onLeft ^ !!(leftTitle || buttonImage)) {\n          console.warn(\"Both onLeft and leftTitle/leftButtonImage\\n            must be specified for the scene: \" + state.name);\n        }\n\n        return null;\n      }\n\n      return tryRender(this.props.component, this.props.wrapBy) || tryRender(this.props);\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle(childState, index) {\n      var title = this.props.getTitle ? this.props.getTitle(childState) : childState.title;\n\n      if (title === undefined && childState.component && childState.component.title) {\n        title = childState.component.title;\n      }\n\n      if (typeof title === 'function') {\n        title = title(childState);\n      }\n\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: childState.key,\n        style: [styles.titleWrapper, this.props.titleWrapperStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Animated.Text, (0, _extends2.default)({\n        lineBreakMode: \"tail\",\n        numberOfLines: 1\n      }, this.props.titleProps, {\n        style: [styles.title, this.props.titleStyle, this.props.navigationState.titleStyle, childState.titleStyle, {\n          opacity: this.props.position.interpolate({\n            inputRange: [index - 1, index, index + 1],\n            outputRange: [0, this.props.titleOpacity, 0]\n          }),\n          left: this.props.position.interpolate({\n            inputRange: [index - 1, index + 1],\n            outputRange: [200, -200]\n          }),\n          right: this.props.position.interpolate({\n            inputRange: [index - 1, index + 1],\n            outputRange: [-200, 200]\n          })\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 9\n        }\n      }), title));\n    }\n  }, {\n    key: \"renderImageTitle\",\n    value: function renderImageTitle() {\n      var state = this.props.navigationState;\n      var navigationBarTitleImage = this.props.navigationBarTitleImage || state.navigationBarTitleImage;\n      var navigationBarTitleImageStyle = this.props.navigationBarTitleImageStyle || state.navigationBarTitleImageStyle;\n      var navigationBarShowImageSelection = this.props.navigationBarShowImageSelection || state.navigationBarShowImageSelection || false;\n      var navigationBarSelecionStyle = this.props.navigationBarSelecionStyle || state.navigationBarSelecionStyle || {};\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.titleWrapper, this.props.titleWrapperStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Animated.Image, {\n        style: [styles.titleImage, navigationBarTitleImageStyle],\n        source: navigationBarTitleImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 9\n        }\n      }), navigationBarShowImageSelection && _react.default.createElement(_reactNative.Animated.View, {\n        style: navigationBarSelecionStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 45\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var state = this.props.navigationState;\n      var selected = state.children[state.index];\n\n      while ({}.hasOwnProperty.call(selected, 'children')) {\n        state = selected;\n        selected = selected.children[selected.index];\n      }\n\n      var navProps = _objectSpread({}, this.props, {}, selected);\n\n      var wrapByStyle = function wrapByStyle(component, wrapStyle) {\n        if (!component) {\n          return null;\n        }\n\n        return function (props) {\n          return _react.default.createElement(_reactNative.View, {\n            style: wrapStyle,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 23\n            }\n          }, component(props));\n        };\n      };\n\n      var leftButtonStyle = [styles.leftButton, {\n        alignItems: 'flex-start'\n      }, this.props.leftButtonStyle, state.leftButtonStyle];\n      var rightButtonStyle = [styles.rightButton, {\n        alignItems: 'flex-end'\n      }, this.props.rightButtonStyle, state.rightButtonStyle];\n      var renderLeftButton = wrapByStyle(selected.renderLeftButton, leftButtonStyle) || wrapByStyle(selected.component.renderLeftButton, leftButtonStyle) || this.renderLeftButton;\n      var renderRightButton = wrapByStyle(selected.renderRightButton, rightButtonStyle) || wrapByStyle(selected.component.renderRightButton, rightButtonStyle) || this.renderRightButton;\n      var renderBackButton = wrapByStyle(selected.renderBackButton, leftButtonStyle) || wrapByStyle(selected.component.renderBackButton, leftButtonStyle) || this.renderBackButton;\n      var renderTitle = selected.renderTitle || selected.component.renderTitle || this.props.renderTitle;\n      var navigationBarBackgroundImage = this.props.navigationBarBackgroundImage || state.navigationBarBackgroundImage;\n      var navigationBarBackgroundImageStyle = this.props.navigationBarBackgroundImageStyle || state.navigationBarBackgroundImageStyle;\n      var navigationBarTitleImage = this.props.navigationBarTitleImage || state.navigationBarTitleImage;\n      var imageOrTitle = null;\n\n      if (navigationBarTitleImage) {\n        imageOrTitle = this.renderImageTitle();\n      } else {\n        imageOrTitle = renderTitle ? renderTitle(navProps) : state.children.map(this.renderTitle, this);\n      }\n\n      var contents = _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 7\n        }\n      }, imageOrTitle, renderBackButton(navProps) || renderLeftButton(navProps), renderRightButton(navProps));\n\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.header, this.props.navigationBarStyle, state.navigationBarStyle, selected.navigationBarStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 7\n        }\n      }, navigationBarBackgroundImage ? _react.default.createElement(_reactNative.Image, {\n        style: navigationBarBackgroundImageStyle,\n        source: navigationBarBackgroundImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }\n      }, contents) : contents);\n    }\n  }]);\n  return NavBar;\n}(_react.default.Component);\n\nNavBar.propTypes = propTypes;\nNavBar.contextTypes = contextTypes;\nNavBar.defaultProps = defaultProps;\nvar _default = NavBar;\nexports.default = _default;","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-router-flux/src/NavBar.js"],"names":["styles","StyleSheet","create","title","textAlign","color","fontSize","width","alignSelf","titleImage","titleWrapper","marginTop","position","Platform","select","ios","top","android","windows","left","right","header","backgroundColor","paddingTop","height","borderBottomWidth","borderBottomColor","backButton","padding","flexDirection","transform","scaleX","I18nManager","isRTL","rightButton","leftButton","barRightButtonText","barBackButtonText","paddingLeft","barLeftButtonText","backButtonImage","defaultImageStyle","resizeMode","propTypes","navigationState","PropTypes","object","Image","source","wrapBy","any","component","backButtonTextStyle","Text","style","leftButtonStyle","ViewPropTypes","rightButtonStyle","leftButtonIconStyle","getTitle","func","titleWrapperStyle","titleStyle","titleOpacity","number","titleProps","navigationBarStyle","navigationBarBackgroundImage","navigationBarBackgroundImageStyle","navigationBarTitleImage","navigationBarTitleImageStyle","navigationBarShowImageSelection","bool","navigationBarSelecionStyle","renderTitle","contextTypes","drawer","defaultProps","drawerImage","_drawerImage","_backButtonImage","NavBar","props","renderRightButton","bind","renderBackButton","renderLeftButton","renderImageTitle","state","childState","children","index","BackButton","textButtonStyle","parentIndex","buttonImage","onPress","onBack","Actions","pop","text","backTitle","hideBackImage","barButtonIconStyle","navProps","self","context","tryRender","onRight","rightButtonImage","menuIcon","drawerIcon","textStyle","rightButtonTextStyle","rightButtonIconStyle","rightTitle","getRightTitle","Button","toggle","side","flex","justifyContent","alignItems","console","warn","name","onLeft","leftButtonImage","leftButtonTextStyle","leftTitle","getLeftTitle","undefined","key","opacity","interpolate","inputRange","outputRange","selected","hasOwnProperty","call","wrapByStyle","wrapStyle","imageOrTitle","map","contents","React","Component"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.  All rights reserved.\n *\n * Facebook, Inc. (\"Facebook\") owns all right, title and interest, including\n * all intellectual property and other proprietary rights, in and to the React\n * Native CustomComponents software (the \"Software\").  Subject to your\n * compliance with these terms, you are hereby granted a non-exclusive,\n * worldwide, royalty-free copyright license to (1) use and copy the Software;\n * and (2) reproduce and distribute the Software as part of your own software\n * (\"Your Software\").  Facebook reserves all rights not expressly granted to\n * you in this license agreement.\n *\n * THE SOFTWARE AND DOCUMENTATION, IF ANY, ARE PROVIDED \"AS IS\" AND ANY EXPRESS\n * OR IMPLIED WARRANTIES (INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE) ARE DISCLAIMED.\n * IN NO EVENT SHALL FACEBOOK OR ITS AFFILIATES, OFFICERS, DIRECTORS OR\n * EMPLOYEES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Platform,\n  Animated,\n  I18nManager,\n  Image,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  ViewPropTypes\n} from 'react-native';\nimport Actions from './Actions';\nimport _drawerImage from './menu_burger.png';\nimport _backButtonImage from './back_chevron.png';\n\nconst styles = StyleSheet.create({\n  title: {\n    textAlign: 'center',\n    color: '#0A0A0A',\n    fontSize: 18,\n    width: 180,\n    alignSelf: 'center',\n  },\n  titleImage: {\n    width: 180,\n    alignSelf: 'center',\n  },\n  titleWrapper: {\n    marginTop: 10,\n    position: 'absolute',\n    ...Platform.select({\n      ios: {\n        top: 20,\n      },\n      android: {\n        top: 5,\n      },\n      windows: {\n        top: 5,\n      },\n    }),\n    left: 0,\n    right: 0,\n  },\n  header: {\n    backgroundColor: '#EFEFF2',\n    paddingTop: 0,\n    top: 0,\n    ...Platform.select({\n      ios: {\n        height: 64,\n      },\n      android: {\n        height: 54,\n      },\n      windows: {\n        height: 54,\n      },\n    }),\n    right: 0,\n    left: 0,\n    borderBottomWidth: 0.5,\n    borderBottomColor: '#828287',\n    position: 'absolute',\n  },\n  backButton: {\n    height: 37,\n    position: 'absolute',\n    ...Platform.select({\n      ios: {\n        top: 20,\n      },\n      android: {\n        top: 10,\n      },\n      windows: {\n        top: 8,\n      },\n    }),\n    left: 2,\n    padding: 8,\n    flexDirection: 'row',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n  rightButton: {\n    height: 37,\n    position: 'absolute',\n    ...Platform.select({\n      ios: {\n        top: 20,\n      },\n      android: {\n        top: 10,\n      },\n      windows: {\n        top: 8,\n      },\n    }),\n    right: 2,\n    padding: 8,\n  },\n  leftButton: {\n    height: 37,\n    position: 'absolute',\n    ...Platform.select({\n      ios: {\n        top: 20,\n      },\n      android: {\n        top: 10,\n      },\n      windows: {\n        top: 8,\n      },\n    }),\n    left: 2,\n    padding: 8,\n  },\n  barRightButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'right',\n    fontSize: 17,\n  },\n  barBackButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'left',\n    fontSize: 17,\n    paddingLeft: 6,\n  },\n  barLeftButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'left',\n    fontSize: 17,\n  },\n  backButtonImage: {\n    width: 13,\n    height: 21,\n  },\n  defaultImageStyle: {\n    height: 24,\n    resizeMode: 'contain',\n  },\n});\n\nconst propTypes = {\n  navigationState: PropTypes.object,\n  backButtonImage: Image.propTypes.source,\n  wrapBy: PropTypes.any,\n  component: PropTypes.any,\n  backButtonTextStyle: Text.propTypes.style,\n  leftButtonStyle: ViewPropTypes.style,\n  rightButtonStyle: ViewPropTypes.style,\n  leftButtonIconStyle: Image.propTypes.style,\n  getTitle: PropTypes.func,\n  titleWrapperStyle: Text.propTypes.style,\n  titleStyle: Text.propTypes.style,\n  titleOpacity: PropTypes.number,\n  titleProps: PropTypes.any,\n  position: PropTypes.object,\n  navigationBarStyle: ViewPropTypes.style,\n  navigationBarBackgroundImage: Image.propTypes.source,\n  navigationBarBackgroundImageStyle: Image.propTypes.style,\n  navigationBarTitleImage: Image.propTypes.source,\n  navigationBarTitleImageStyle: Image.propTypes.style,\n  navigationBarShowImageSelection: PropTypes.bool,\n  navigationBarSelecionStyle: ViewPropTypes.style,\n  renderTitle: PropTypes.any,\n};\n\nconst contextTypes = {\n  drawer: PropTypes.object,\n};\n\nconst defaultProps = {\n  drawerImage: _drawerImage,\n  backButtonImage: _backButtonImage,\n  titleOpacity: 1,\n};\n\nclass NavBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.renderRightButton = this.renderRightButton.bind(this);\n    this.renderBackButton = this.renderBackButton.bind(this);\n    this.renderLeftButton = this.renderLeftButton.bind(this);\n    this.renderTitle = this.renderTitle.bind(this);\n    this.renderImageTitle = this.renderImageTitle.bind(this);\n  }\n\n  renderBackButton() {\n    const state = this.props.navigationState;\n    const childState = state.children[state.index];\n    const BackButton = (childState.component && childState.component.backButton) || state.backButton\n      || childState.backButton;\n    const textButtonStyle = [\n      styles.barBackButtonText,\n      this.props.backButtonTextStyle,\n      state.backButtonTextStyle,\n      childState.backButtonTextStyle,\n    ];\n    const style = [\n      styles.backButton,\n      this.props.leftButtonStyle,\n      state.leftButtonStyle,\n      childState.leftButtonStyle,\n    ];\n\n    if (state.index === 0 && (!state.parentIndex || state.parentIndex === 0)) {\n      return null;\n    }\n\n    if (BackButton) {\n      return (\n        <BackButton\n          testID=\"backNavButton\"\n          textButtonStyle={textButtonStyle}\n          {...childState}\n          style={style}\n        />\n      );\n    }\n    const buttonImage = childState.backButtonImage ||\n      state.backButtonImage || this.props.backButtonImage;\n    let onPress = childState.onBack || childState.component.onBack;\n    if (onPress) {\n      onPress = onPress.bind(null, state);\n    } else {\n      onPress = Actions.pop;\n    }\n\n    const text = childState.backTitle ?\n      (<Text style={textButtonStyle}>\n        {childState.backTitle}\n      </Text>)\n      : null;\n\n    return (\n      <TouchableOpacity\n        testID=\"backNavButton\"\n        style={style}\n        onPress={onPress}\n      >\n        {buttonImage && !childState.hideBackImage &&\n          <Image\n            source={buttonImage}\n            style={[\n              styles.backButtonImage,\n              this.props.leftButtonIconStyle,\n              state.barButtonIconStyle,\n              state.leftButtonIconStyle,\n              childState.leftButtonIconStyle,\n            ]}\n          />\n        }\n        {text}\n      </TouchableOpacity>\n    );\n  }\n\n  renderRightButton(navProps) {\n    const self = this;\n    const drawer = this.context.drawer;\n    function tryRender(state, wrapBy) {\n      if (!state) {\n        return null;\n      }\n\n      let onPress = state.onRight;\n      let buttonImage = state.rightButtonImage;\n      let menuIcon = state.drawerIcon;\n      const style = [styles.rightButton, self.props.rightButtonStyle, state.rightButtonStyle];\n      const textStyle = [styles.barRightButtonText, self.props.rightButtonTextStyle,\n        state.rightButtonTextStyle];\n      const rightButtonStyle = [styles.defaultImageStyle, state.rightButtonIconStyle];\n      const rightTitle = state.getRightTitle ? state.getRightTitle(navProps) : state.rightTitle;\n\n      if (state.rightButton) {\n        let Button = state.rightButton;\n        if (wrapBy) {\n          Button = wrapBy(Button);\n        }\n        return (\n          <Button\n            {...self.props}\n            {...state}\n            key={'rightNavBarBtn'}\n            testID=\"rightNavButton\"\n            style={style}\n            textButtonStyle={textStyle}\n          />\n        );\n      }\n\n      if (!onPress && !!drawer && typeof drawer.toggle === 'function' && drawer.props.side === 'right') {\n        buttonImage = state.drawerImage;\n        if (buttonImage || menuIcon) {\n          onPress = drawer.toggle;\n        }\n        if (!menuIcon) {\n          menuIcon = (\n            <Image\n              source={buttonImage}\n              style={rightButtonStyle}\n            />\n          );\n        }\n      }\n\n      if (onPress && (rightTitle || buttonImage)) {\n        onPress = onPress.bind(null, state);\n        return (\n          <TouchableOpacity\n            key={'rightNavBarBtn'}\n            testID=\"rightNavButton\"\n            style={style}\n            onPress={onPress}\n          >\n            {rightTitle &&\n              <Text style={textStyle}>\n                {rightTitle}\n              </Text>\n            }\n            {buttonImage &&\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-end' }}>\n                {menuIcon || <Image\n                  source={buttonImage}\n                  style={state.rightButtonIconStyle || styles.defaultImageStyle}\n                />\n                }\n              </View>\n            }\n          </TouchableOpacity>\n        );\n      }\n      if ((!!state.onRight ^ !!(typeof (rightTitle) !== 'undefined'\n        || typeof (buttonImage) !== 'undefined'))) {\n        console.warn(\n          `Both onRight and rightTitle/rightButtonImage\n            must be specified for the scene: ${state.name}`,\n        );\n      }\n      return null;\n    }\n    return tryRender(this.props.component, this.props.wrapBy) || tryRender(this.props);\n  }\n\n  renderLeftButton(navProps) {\n    const self = this;\n    const drawer = this.context.drawer;\n    function tryRender(state, wrapBy) {\n      let onPress = state.onLeft;\n      let buttonImage = state.leftButtonImage;\n      let menuIcon = state.drawerIcon;\n      const style = [styles.leftButton, self.props.leftButtonStyle, state.leftButtonStyle];\n      const textStyle = [styles.barLeftButtonText, self.props.leftButtonTextStyle,\n        state.leftButtonTextStyle];\n      const leftButtonStyle = [styles.defaultImageStyle, state.leftButtonIconStyle];\n      const leftTitle = state.getLeftTitle ? state.getLeftTitle(navProps) : state.leftTitle;\n\n      if (state.leftButton) {\n        let Button = state.leftButton;\n        if (wrapBy) {\n          Button = wrapBy(Button);\n        }\n        return (\n          <Button\n            {...self.props}\n            {...state}\n            key={'leftNavBarBtn'}\n            testID=\"leftNavButton\"\n            style={style}\n            textStyle={textStyle}\n          />\n        );\n      }\n\n      if (!onPress && !!drawer && typeof drawer.toggle === 'function' && drawer.props.side === 'left') {\n        buttonImage = state.drawerImage;\n        if (buttonImage || menuIcon) {\n          onPress = drawer.toggle;\n        }\n        if (!menuIcon) {\n          menuIcon = (\n            <Image\n              source={buttonImage}\n              style={leftButtonStyle}\n            />\n          );\n        }\n      }\n\n      if (onPress && (leftTitle || buttonImage)) {\n        onPress = onPress.bind(null, state);\n        return (\n          <TouchableOpacity\n            key={'leftNavBarBtn'}\n            testID=\"leftNavButton\"\n            style={style}\n            onPress={onPress}\n          >\n            {leftTitle &&\n              <Text style={textStyle}>\n                {leftTitle}\n              </Text>\n            }\n            {buttonImage &&\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-start' }}>\n                {menuIcon || <Image\n                  source={buttonImage}\n                  style={state.leftButtonIconStyle || styles.defaultImageStyle}\n                />\n                }\n              </View>\n            }\n          </TouchableOpacity>\n        );\n      }\n      if ((!!state.onLeft ^ !!(leftTitle || buttonImage))) {\n        console.warn(\n          `Both onLeft and leftTitle/leftButtonImage\n            must be specified for the scene: ${state.name}`,\n        );\n      }\n      return null;\n    }\n    return tryRender(this.props.component, this.props.wrapBy) || tryRender(this.props);\n  }\n\n  renderTitle(childState, index:number) {\n    let title = this.props.getTitle ? this.props.getTitle(childState) : childState.title;\n    if (title === undefined && childState.component && childState.component.title) {\n      title = childState.component.title;\n    }\n    if (typeof (title) === 'function') {\n      title = title(childState);\n    }\n    return (\n      <Animated.View\n        key={childState.key}\n        style={[\n          styles.titleWrapper,\n          this.props.titleWrapperStyle,\n        ]}\n      >\n        <Animated.Text\n          lineBreakMode=\"tail\"\n          numberOfLines={1}\n          {...this.props.titleProps}\n          style={[\n            styles.title,\n            this.props.titleStyle,\n            this.props.navigationState.titleStyle,\n            childState.titleStyle,\n            {\n              opacity: this.props.position.interpolate({\n                inputRange: [index - 1, index, index + 1],\n                outputRange: [0, this.props.titleOpacity, 0],\n              }),\n              left: this.props.position.interpolate({\n                inputRange: [index - 1, index + 1],\n                outputRange: [200, -200],\n              }),\n              right: this.props.position.interpolate({\n                inputRange: [index - 1, index + 1],\n                outputRange: [-200, 200],\n              }),\n            },\n          ]}\n        >\n          {title}\n        </Animated.Text>\n      </Animated.View>\n    );\n  }\n\n  renderImageTitle() {\n    const state = this.props.navigationState;\n    const navigationBarTitleImage = this.props.navigationBarTitleImage ||\n      state.navigationBarTitleImage;\n    const navigationBarTitleImageStyle = this.props.navigationBarTitleImageStyle ||\n      state.navigationBarTitleImageStyle;\n    const navigationBarShowImageSelection = this.props.navigationBarShowImageSelection ||\n      state.navigationBarShowImageSelection || false;\n    const navigationBarSelecionStyle = this.props.navigationBarSelecionStyle ||\n      state.navigationBarSelecionStyle || {};\n    return (\n      <Animated.View\n        style={[\n          styles.titleWrapper,\n          this.props.titleWrapperStyle,\n        ]}\n      >\n        <Animated.Image\n          style={[styles.titleImage, navigationBarTitleImageStyle]}\n          source={navigationBarTitleImage}\n        />\n        {navigationBarShowImageSelection && <Animated.View style={navigationBarSelecionStyle} />}\n      </Animated.View>\n    );\n  }\n\n  render() {\n    let state = this.props.navigationState;\n    let selected = state.children[state.index];\n    while ({}.hasOwnProperty.call(selected, 'children')) {\n      state = selected;\n      selected = selected.children[selected.index];\n    }\n    const navProps = { ...this.props, ...selected };\n\n    const wrapByStyle = (component, wrapStyle) => {\n      if (!component) { return null; }\n      return props => <View style={wrapStyle}>{component(props)}</View>;\n    };\n\n    const leftButtonStyle = [styles.leftButton, { alignItems: 'flex-start' }, this.props.leftButtonStyle, state.leftButtonStyle];\n    const rightButtonStyle = [styles.rightButton, { alignItems: 'flex-end' }, this.props.rightButtonStyle, state.rightButtonStyle];\n\n    const renderLeftButton = wrapByStyle(selected.renderLeftButton, leftButtonStyle) ||\n      wrapByStyle(selected.component.renderLeftButton, leftButtonStyle) ||\n      this.renderLeftButton;\n    const renderRightButton = wrapByStyle(selected.renderRightButton, rightButtonStyle) ||\n      wrapByStyle(selected.component.renderRightButton, rightButtonStyle) ||\n      this.renderRightButton;\n    const renderBackButton = wrapByStyle(selected.renderBackButton, leftButtonStyle) ||\n      wrapByStyle(selected.component.renderBackButton, leftButtonStyle) ||\n      this.renderBackButton;\n    const renderTitle = selected.renderTitle ||\n      selected.component.renderTitle ||\n      this.props.renderTitle;\n    const navigationBarBackgroundImage = this.props.navigationBarBackgroundImage ||\n      state.navigationBarBackgroundImage;\n    const navigationBarBackgroundImageStyle = this.props.navigationBarBackgroundImageStyle ||\n      state.navigationBarBackgroundImageStyle;\n    const navigationBarTitleImage = this.props.navigationBarTitleImage ||\n      state.navigationBarTitleImage;\n    let imageOrTitle = null;\n    if (navigationBarTitleImage) {\n      imageOrTitle = this.renderImageTitle();\n    } else {\n      imageOrTitle = renderTitle ? renderTitle(navProps)\n      : state.children.map(this.renderTitle, this);\n    }\n    const contents = (\n      <View>\n        {imageOrTitle}\n        {renderBackButton(navProps) || renderLeftButton(navProps)}\n        {renderRightButton(navProps)}\n      </View>\n    );\n    return (\n      <Animated.View\n        style={[\n          styles.header,\n          this.props.navigationBarStyle,\n          state.navigationBarStyle,\n          selected.navigationBarStyle,\n        ]}\n      >\n        {navigationBarBackgroundImage ? (\n          <Image style={navigationBarBackgroundImageStyle} source={navigationBarBackgroundImage}>\n            {contents}\n          </Image>\n        ) : contents}\n      </Animated.View>\n    );\n  }\n}\n\nNavBar.propTypes = propTypes;\nNavBar.contextTypes = contextTypes;\nNavBar.defaultProps = defaultProps;\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"script"}