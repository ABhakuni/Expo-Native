{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _jsxFileName = \"/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationCard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Animated = require('react-native').Animated;\n\nvar NavigationCardStackPanResponder = require('./NavigationCardStackPanResponder');\n\nvar NavigationCardStackStyleInterpolator = require('./NavigationCardStackStyleInterpolator');\n\nvar NavigationContainer = require('./NavigationContainer');\n\nvar NavigationPagerPanResponder = require('./NavigationPagerPanResponder');\n\nvar NavigationPagerStyleInterpolator = require('./NavigationPagerStyleInterpolator');\n\nvar NavigationPointerEventsContainer = require('./NavigationPointerEventsContainer');\n\nvar NavigationPropTypes = require('./NavigationPropTypes');\n\nvar React = require('react');\n\nvar StyleSheet = require('react-native').StyleSheet;\n\nvar View = require('react-native').View;\n\nvar PropTypes = require('prop-types');\n\nvar SceneView = function (_React$Component) {\n  _inherits(SceneView, _React$Component);\n\n  var _super = _createSuper(SceneView);\n\n  function SceneView() {\n    _classCallCheck(this, SceneView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SceneView, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return nextProps.sceneRendererProps.scene.navigationState !== this.props.sceneRendererProps.scene.navigationState;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.sceneRenderer(this.props.sceneRendererProps);\n    }\n  }]);\n\n  return SceneView;\n}(React.Component);\n\nSceneView.propTypes = {\n  sceneRenderer: PropTypes.func.isRequired,\n  sceneRendererProps: NavigationPropTypes.SceneRenderer\n};\n\nvar NavigationCard = function (_React$Component2) {\n  _inherits(NavigationCard, _React$Component2);\n\n  var _super2 = _createSuper(NavigationCard);\n\n  function NavigationCard() {\n    _classCallCheck(this, NavigationCard);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(NavigationCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          panHandlers = _this$props.panHandlers,\n          pointerEvents = _this$props.pointerEvents,\n          renderScene = _this$props.renderScene,\n          style = _this$props.style,\n          props = _objectWithoutProperties(_this$props, [\"panHandlers\", \"pointerEvents\", \"renderScene\", \"style\"]);\n\n      var viewStyle = style === undefined ? NavigationCardStackStyleInterpolator.forHorizontal(props) : style;\n      var viewPanHandlers = panHandlers === undefined ? NavigationCardStackPanResponder.forHorizontal(props) : panHandlers;\n      return React.createElement(Animated.View, _extends({}, viewPanHandlers, {\n        pointerEvents: pointerEvents,\n        ref: this.props.onComponentRef,\n        style: [styles.main, viewStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      }), React.createElement(SceneView, {\n        sceneRenderer: renderScene,\n        sceneRendererProps: props,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return NavigationCard;\n}(React.Component);\n\nNavigationCard.propTypes = _objectSpread({}, NavigationPropTypes.SceneRendererProps, {\n  onComponentRef: PropTypes.func.isRequired,\n  panHandlers: NavigationPropTypes.panHandlers,\n  pointerEvents: PropTypes.string.isRequired,\n  renderScene: PropTypes.func.isRequired,\n  style: PropTypes.any\n});\nvar styles = StyleSheet.create({\n  main: {\n    backgroundColor: 'white',\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n});\nNavigationCard = NavigationPointerEventsContainer.create(NavigationCard);\nNavigationCard = NavigationContainer.create(NavigationCard);\nNavigationCard.CardStackPanResponder = NavigationCardStackPanResponder;\nNavigationCard.CardStackStyleInterpolator = NavigationCardStackStyleInterpolator;\nNavigationCard.PagerPanResponder = NavigationPagerPanResponder;\nNavigationCard.PagerStyleInterpolator = NavigationPagerStyleInterpolator;\nmodule.exports = NavigationCard;","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-experimental-navigation/NavigationCard.js"],"names":["Animated","require","NavigationCardStackPanResponder","NavigationCardStackStyleInterpolator","NavigationContainer","NavigationPagerPanResponder","NavigationPagerStyleInterpolator","NavigationPointerEventsContainer","NavigationPropTypes","React","StyleSheet","View","PropTypes","SceneView","nextProps","nextState","sceneRendererProps","scene","navigationState","props","sceneRenderer","Component","propTypes","func","isRequired","SceneRenderer","NavigationCard","panHandlers","pointerEvents","renderScene","style","viewStyle","undefined","forHorizontal","viewPanHandlers","onComponentRef","styles","main","SceneRendererProps","string","any","create","backgroundColor","bottom","left","position","right","top","CardStackPanResponder","CardStackStyleInterpolator","PagerPanResponder","PagerStyleInterpolator","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Facebook, Inc. (\"Facebook\") owns all right, title and interest, including\n * all intellectual property and other proprietary rights, in and to the React\n * Native CustomComponents software (the \"Software\").  Subject to your\n * compliance with these terms, you are hereby granted a non-exclusive,\n * worldwide, royalty-free copyright license to (1) use and copy the Software;\n * and (2) reproduce and distribute the Software as part of your own software\n * (\"Your Software\").  Facebook reserves all rights not expressly granted to\n * you in this license agreement.\n *\n * THE SOFTWARE AND DOCUMENTATION, IF ANY, ARE PROVIDED \"AS IS\" AND ANY EXPRESS\n * OR IMPLIED WARRANTIES (INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE) ARE DISCLAIMED.\n * IN NO EVENT SHALL FACEBOOK OR ITS AFFILIATES, OFFICERS, DIRECTORS OR\n * EMPLOYEES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @providesModule NavigationCard\n * @flow\n */\n'use strict';\n\nconst Animated = require('react-native').Animated;\nconst NavigationCardStackPanResponder = require('./NavigationCardStackPanResponder');\nconst NavigationCardStackStyleInterpolator = require('./NavigationCardStackStyleInterpolator');\nconst NavigationContainer = require('./NavigationContainer');\nconst NavigationPagerPanResponder = require('./NavigationPagerPanResponder');\nconst NavigationPagerStyleInterpolator = require('./NavigationPagerStyleInterpolator');\nconst NavigationPointerEventsContainer = require('./NavigationPointerEventsContainer');\nconst NavigationPropTypes = require('./NavigationPropTypes');\nconst React = require('react');\nconst StyleSheet = require('react-native').StyleSheet;\nconst View = require('react-native').View;\n\nimport type  {\n  NavigationPanPanHandlers,\n  NavigationSceneRenderer,\n  NavigationSceneRendererProps,\n} from 'NavigationTypeDefinition';\n\ntype SceneViewProps =  {\n  sceneRenderer: NavigationSceneRenderer,\n  sceneRendererProps: NavigationSceneRendererProps,\n};\n\ntype Props = NavigationSceneRendererProps & {\n  onComponentRef: (ref: any) => void,\n  panHandlers: ?NavigationPanPanHandlers,\n  pointerEvents: string,\n  renderScene: NavigationSceneRenderer,\n  style: any,\n};\n\nconst PropTypes = require('prop-types');\n\nclass SceneView extends React.Component<any, SceneViewProps, any> {\n\n  static propTypes = {\n    sceneRenderer: PropTypes.func.isRequired,\n    sceneRendererProps: NavigationPropTypes.SceneRenderer,\n  };\n\n  shouldComponentUpdate(nextProps: SceneViewProps, nextState: any): boolean {\n    return (\n      nextProps.sceneRendererProps.scene.navigationState !==\n        this.props.sceneRendererProps.scene.navigationState\n    );\n  }\n\n  render(): ?ReactElement {\n    return this.props.sceneRenderer(this.props.sceneRendererProps);\n  }\n}\n\n/**\n * Component that renders the scene as card for the <NavigationCardStack />.\n */\nclass NavigationCard extends React.Component<any, Props, any> {\n  props: Props;\n\n  static propTypes = {\n    ...NavigationPropTypes.SceneRendererProps,\n    onComponentRef: PropTypes.func.isRequired,\n    panHandlers: NavigationPropTypes.panHandlers,\n    pointerEvents: PropTypes.string.isRequired,\n    renderScene: PropTypes.func.isRequired,\n    style: PropTypes.any,\n  };\n\n  render(): ReactElement {\n    const {\n      panHandlers,\n      pointerEvents,\n      renderScene,\n      style,\n      ...props /* NavigationSceneRendererProps */\n    } = this.props;\n\n    const viewStyle = style === undefined ?\n      NavigationCardStackStyleInterpolator.forHorizontal(props) :\n      style;\n\n    const viewPanHandlers = panHandlers === undefined ?\n      NavigationCardStackPanResponder.forHorizontal(props) :\n      panHandlers;\n\n    return (\n      <Animated.View\n        {...viewPanHandlers}\n        pointerEvents={pointerEvents}\n        ref={this.props.onComponentRef}\n        style={[styles.main, viewStyle]}>\n        <SceneView\n          sceneRenderer={renderScene}\n          sceneRendererProps={props}\n        />\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    backgroundColor: 'white',\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n});\n\nNavigationCard = NavigationPointerEventsContainer.create(NavigationCard);\nNavigationCard = NavigationContainer.create(NavigationCard);\n\n// Export these buil-in interaction modules.\nNavigationCard.CardStackPanResponder = NavigationCardStackPanResponder;\nNavigationCard.CardStackStyleInterpolator = NavigationCardStackStyleInterpolator;\nNavigationCard.PagerPanResponder = NavigationPagerPanResponder;\nNavigationCard.PagerStyleInterpolator = NavigationPagerStyleInterpolator;\n\nmodule.exports = NavigationCard;\n"]},"metadata":{},"sourceType":"script"}