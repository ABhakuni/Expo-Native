{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactStaticContainer = _interopRequireDefault(require(\"react-static-container\"));\n\nvar _jsxFileName = \"/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-router-flux/src/TabbedView.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar styles = _reactNative.StyleSheet.create({\n  scene: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n});\n\nvar TabbedView = function (_Component) {\n  (0, _inherits2.default)(TabbedView, _Component);\n\n  var _super = _createSuper(TabbedView);\n\n  function TabbedView(props, context) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TabbedView);\n    _this = _super.call(this, props, context);\n    _this.renderedSceneKeys = {};\n    _this.renderScene = _this.renderScene.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(TabbedView, [{\n    key: \"renderScene\",\n    value: function renderScene(navigationState, index) {\n      var isSelected = index === this.props.navigationState.index;\n      return _react.default.createElement(_reactNative.View, {\n        key: navigationState.key,\n        pointerEvents: isSelected ? 'auto' : 'none',\n        removeClippedSubviews: !isSelected,\n        style: [styles.scene, {\n          opacity: isSelected ? 1 : 0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactStaticContainer.default, {\n        shouldUpdate: isSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, this.props.renderScene(navigationState, index)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var scenes = [];\n      var _this$props$navigatio = this.props.navigationState,\n          index = _this$props$navigatio.index,\n          children = _this$props$navigatio.children;\n      children.forEach(function (item, i) {\n        var key = item.key;\n\n        if (i !== index && !_this2.renderedSceneKeys[key]) {\n          return;\n        }\n\n        _this2.renderedSceneKeys[key] = true;\n        scenes.push(_this2.renderScene(item, i));\n      });\n      return _react.default.createElement(_reactNative.View, {\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, scenes);\n    }\n  }]);\n  return TabbedView;\n}(_react.Component);\n\nTabbedView.propTypes = {\n  navigationState: _react.PropTypes.object.isRequired,\n  renderScene: _react.PropTypes.func.isRequired,\n  style: _reactNative.View.propTypes.style\n};\nvar _default = TabbedView;\nexports.default = _default;","map":{"version":3,"sources":["/Users/apple/Documents/janitri/sampleapp/node_modules/react-native-router-flux/src/TabbedView.js"],"names":["styles","StyleSheet","create","scene","bottom","left","position","right","top","TabbedView","props","context","renderedSceneKeys","renderScene","bind","navigationState","index","isSelected","key","opacity","scenes","children","forEach","item","i","push","style","Component","propTypes","PropTypes","object","isRequired","func","View"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,CADH;AAELC,IAAAA,IAAI,EAAE,CAFD;AAGLC,IAAAA,QAAQ,EAAE,UAHL;AAILC,IAAAA,KAAK,EAAE,CAJF;AAKLC,IAAAA,GAAG,EAAE;AALA;AADwB,CAAlB,CAAf;;IAUMC,U;;;;;AAQJ,sBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;AAC1B,8BAAMD,KAAN,EAAaC,OAAb;AACA,UAAKC,iBAAL,GAAyB,EAAzB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,6CAAnB;AAH0B;AAI3B;;;;gCAEWC,e,EAAiBC,K,EAAO;AAClC,UAAMC,UAAU,GAAGD,KAAK,KAAK,KAAKN,KAAL,CAAWK,eAAX,CAA2BC,KAAxD;AACA,aACE,6BAAC,iBAAD;AACE,QAAA,GAAG,EAAED,eAAe,CAACG,GADvB;AAEE,QAAA,aAAa,EAAED,UAAU,GAAG,MAAH,GAAY,MAFvC;AAGE,QAAA,qBAAqB,EAAE,CAACA,UAH1B;AAIE,QAAA,KAAK,EAAE,CACLjB,MAAM,CAACG,KADF,EAEL;AAAEgB,UAAAA,OAAO,EAAEF,UAAU,GAAG,CAAH,GAAO;AAA5B,SAFK,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,6BAAC,6BAAD;AAAiB,QAAA,YAAY,EAAEA,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,KAAL,CAAWG,WAAX,CAAuBE,eAAvB,EAAwCC,KAAxC,CADH,CATF,CADF;AAeD;;;6BAEQ;AAAA;;AACP,UAAMI,MAAM,GAAG,EAAf;AADO,kCAEqB,KAAKV,KAAL,CAAWK,eAFhC;AAAA,UAECC,KAFD,yBAECA,KAFD;AAAA,UAEQK,QAFR,yBAEQA,QAFR;AAGPA,MAAAA,QAAQ,CAACC,OAAT,CAAiB,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC5B,YAAMN,GAAG,GAAGK,IAAI,CAACL,GAAjB;;AACA,YAAIM,CAAC,KAAKR,KAAN,IAAe,CAAC,MAAI,CAACJ,iBAAL,CAAuBM,GAAvB,CAApB,EAAiD;AAC/C;AACD;;AACD,QAAA,MAAI,CAACN,iBAAL,CAAuBM,GAAvB,IAA8B,IAA9B;AACAE,QAAAA,MAAM,CAACK,IAAP,CAAY,MAAI,CAACZ,WAAL,CAAiBU,IAAjB,EAAuBC,CAAvB,CAAZ;AACD,OAPD;AAQA,aACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWgB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,MADH,CADF;AAKD;;;EAjDsBO,gB;;AAAnBlB,U,CAEGmB,S,GAAY;AACjBb,EAAAA,eAAe,EAAEc,iBAAUC,MAAV,CAAiBC,UADjB;AAEjBlB,EAAAA,WAAW,EAAEgB,iBAAUG,IAAV,CAAeD,UAFX;AAGjBL,EAAAA,KAAK,EAAEO,kBAAKL,SAAL,CAAeF;AAHL,C;eAmDNjB,U","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport StaticContainer from 'react-static-container';\n\nconst styles = StyleSheet.create({\n  scene: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n});\n\nclass TabbedView extends Component {\n\n  static propTypes = {\n    navigationState: PropTypes.object.isRequired,\n    renderScene: PropTypes.func.isRequired,\n    style: View.propTypes.style,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.renderedSceneKeys = {};\n    this.renderScene = this.renderScene.bind(this);\n  }\n\n  renderScene(navigationState, index) {\n    const isSelected = index === this.props.navigationState.index;\n    return (\n      <View\n        key={navigationState.key}\n        pointerEvents={isSelected ? 'auto' : 'none'}\n        removeClippedSubviews={!isSelected}\n        style={[\n          styles.scene,\n          { opacity: isSelected ? 1 : 0 },\n        ]}\n      >\n        <StaticContainer shouldUpdate={isSelected}>\n          {this.props.renderScene(navigationState, index)}\n        </StaticContainer>\n      </View>\n    );\n  }\n\n  render() {\n    const scenes = [];\n    const { index, children } = this.props.navigationState;\n    children.forEach((item, i) => {\n      const key = item.key;\n      if (i !== index && !this.renderedSceneKeys[key]) {\n        return;\n      }\n      this.renderedSceneKeys[key] = true;\n      scenes.push(this.renderScene(item, i));\n    });\n    return (\n      <View style={this.props.style}>\n        {scenes}\n      </View>\n    );\n  }\n\n}\n\nexport default TabbedView;\n"]},"metadata":{},"sourceType":"script"}